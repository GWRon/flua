<module>
	<header>
		<title/>
		<dependencies>
			<import>
				bp.Core
			</import>
			<import>
				bp.Core.Memory
			</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<const>
			<assign>
				<value>
					arrayMinSize
				</value>
				<value>
					1024
				</value>
			</assign>
		</const>
		<class>
			<name>
				Array
			</name>
			<code>
				<template>
					<parameter>
						TDataType
					</parameter>
				</template>
				<function>
					<name>
						init
					</name>
					<code>
						<assign>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										start
									</value>
								</access>
							</value>
							<value>
								<unmanaged>
									<value>
										<new>
											<type>
												<template-call>
													<value>
														MemPointer
													</value>
													<value>
														TDataType
													</value>
												</template-call>
											</type>
											<parameters>
												<parameter>
													arrayMinSize
												</parameter>
											</parameters>
										</new>
									</value>
								</unmanaged>
							</value>
						</assign>
						<assign>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										end
									</value>
								</access>
							</value>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										start
									</value>
								</access>
							</value>
						</assign>
						<assign>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										endOfStorage
									</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										<access>
											<value>
												self
											</value>
											<value>
												start
											</value>
										</access>
									</value>
									<value>
										arrayMinSize
									</value>
								</add>
							</value>
						</assign>
					</code>
				</function>
				<function>
					<parameters>
						<parameter>
							element
						</parameter>
					</parameters>
					<name>
						add
					</name>
					<code>
						<assign>
							<value>
								<access>
									<value>
										<access>
											<value>
												self
											</value>
											<value>
												end
											</value>
										</access>
									</value>
									<value>
										data
									</value>
								</access>
							</value>
							<value>
								element
							</value>
						</assign>
						<assign-add>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										end
									</value>
								</access>
							</value>
							<value>
								1
							</value>
						</assign-add>
						<if-block>
							<if>
								<condition>
									<equal>
										<value>
											<access>
												<value>
													self
												</value>
												<value>
													end
												</value>
											</access>
										</value>
										<value>
											<access>
												<value>
													self
												</value>
												<value>
													endOfStorage
												</value>
											</access>
										</value>
									</equal>
								</condition>
								<code>
									<call>
										<function>
											<access>
												<value>
													self
												</value>
												<value>
													reserve
												</value>
											</access>
										</function>
										<parameters>
											<parameter>
												<multiply>
													<value>
														<call>
															<function>
																<access>
																	<value>
																		self
																	</value>
																	<value>
																		getLength
																	</value>
																</access>
															</function>
															<parameters/>
														</call>
													</value>
													<value>
														4
													</value>
												</multiply>
											</parameter>
										</parameters>
									</call>
								</code>
							</if>
						</if-block>
					</code>
				</function>
				<function>
					<parameters>
						<parameter>
							newSize
						</parameter>
					</parameters>
					<name>
						reserve
					</name>
					<code>
						<assign>
							<value>
								currentSize
							</value>
							<value>
								<call>
									<function>
										<access>
											<value>
												self
											</value>
											<value>
												getLength
											</value>
										</access>
									</function>
									<parameters/>
								</call>
							</value>
						</assign>
						<assign>
							<value>
								newMem
							</value>
							<value>
								<unmanaged>
									<value>
										<new>
											<type>
												<template-call>
													<value>
														MemPointer
													</value>
													<value>
														TDataType
													</value>
												</template-call>
											</type>
											<parameters>
												<parameter>
													newSize
												</parameter>
											</parameters>
										</new>
									</value>
								</unmanaged>
							</value>
						</assign>
						<call>
							<function>
								copyMem
							</function>
							<parameters>
								<parameter>
									<access>
										<value>
											self
										</value>
										<value>
											start
										</value>
									</access>
								</parameter>
								<parameter>
									newMem
								</parameter>
								<parameter>
									currentSize
								</parameter>
							</parameters>
						</call>
						<call>
							<function>
								<access>
									<value>
										<access>
											<value>
												self
											</value>
											<value>
												start
											</value>
										</access>
									</value>
									<value>
										free
									</value>
								</access>
							</function>
							<parameters/>
						</call>
						<assign>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										end
									</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										newMem
									</value>
									<value>
										currentSize
									</value>
								</add>
							</value>
						</assign>
						<assign>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										start
									</value>
								</access>
							</value>
							<value>
								newMem
							</value>
						</assign>
						<assign>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										endOfStorage
									</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										newMem
									</value>
									<value>
										newSize
									</value>
								</add>
							</value>
						</assign>
					</code>
				</function>
				<function>
					<name>
						removeLast
					</name>
					<code>
						<if-block>
							<if>
								<condition>
									<not-equal>
										<value>
											<access>
												<value>
													self
												</value>
												<value>
													end
												</value>
											</access>
										</value>
										<value>
											<access>
												<value>
													self
												</value>
												<value>
													start
												</value>
											</access>
										</value>
									</not-equal>
								</condition>
								<code>
									<assign-subtract>
										<value>
											<access>
												<value>
													self
												</value>
												<value>
													end
												</value>
											</access>
										</value>
										<value>
											1
										</value>
									</assign-subtract>
								</code>
							</if>
						</if-block>
					</code>
				</function>
				<function>
					<name>
						reverse
					</name>
					<code>
						<assign>
							<value>
								startRev
							</value>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										start
									</value>
								</access>
							</value>
						</assign>
						<assign>
							<value>
								endRev
							</value>
							<value>
								<subtract>
									<value>
										<access>
											<value>
												self
											</value>
											<value>
												end
											</value>
										</access>
									</value>
									<value>
										1
									</value>
								</subtract>
							</value>
						</assign>
						<while>
							<condition>
								<greater>
									<value>
										<subtract>
											<value>
												endRev
											</value>
											<value>
												startRev
											</value>
										</subtract>
									</value>
									<value>
										0
									</value>
								</greater>
							</condition>
							<code>
								<call>
									<function>
										bp_swap
									</function>
									<parameters>
										<parameter>
											<access>
												<value>
													startRev
												</value>
												<value>
													data
												</value>
											</access>
										</parameter>
										<parameter>
											<access>
												<value>
													endRev
												</value>
												<value>
													data
												</value>
											</access>
										</parameter>
									</parameters>
								</call>
								<assign-add>
									<value>
										startRev
									</value>
									<value>
										1
									</value>
								</assign-add>
								<assign-subtract>
									<value>
										endRev
									</value>
									<value>
										1
									</value>
								</assign-subtract>
							</code>
						</while>
					</code>
				</function>
				<operators>
					<operator>
						<parameters>
							<parameter>
								index
							</parameter>
						</parameters>
						<name>
							[]
						</name>
						<code>
							<return>
								<index>
									<value>
										<access>
											<value>
												self
											</value>
											<value>
												start
											</value>
										</access>
									</value>
									<value>
										index
									</value>
								</index>
							</return>
						</code>
					</operator>
				</operators>
				<get>
					<getter>
						<name>
							start
						</name>
						<code>
							<return>
								<access>
									<value>
										self
									</value>
									<value>
										start
									</value>
								</access>
							</return>
						</code>
					</getter>
					<getter>
						<name>
							end
						</name>
						<code>
							<return>
								<access>
									<value>
										self
									</value>
									<value>
										end
									</value>
								</access>
							</return>
						</code>
					</getter>
					<getter>
						<name>
							endOfStorage
						</name>
						<code>
							<return>
								<access>
									<value>
										self
									</value>
									<value>
										endOfStorage
									</value>
								</access>
							</return>
						</code>
					</getter>
					<getter>
						<name>
							length
						</name>
						<code>
							<return>
								<subtract>
									<value>
										<access>
											<value>
												self
											</value>
											<value>
												end
											</value>
										</access>
									</value>
									<value>
										<access>
											<value>
												self
											</value>
											<value>
												start
											</value>
										</access>
									</value>
								</subtract>
							</return>
						</code>
					</getter>
				</get>
				<set>
					<setter>
						<parameters>
							<parameter>
								newLength
							</parameter>
						</parameters>
						<name>
							length
						</name>
						<code>
							<assign>
								<value>
									<access>
										<value>
											self
										</value>
										<value>
											end
										</value>
									</access>
								</value>
								<value>
									<add>
										<value>
											<access>
												<value>
													self
												</value>
												<value>
													start
												</value>
											</access>
										</value>
										<value>
											newLength
										</value>
									</add>
								</value>
							</assign>
							<if-block>
								<if>
									<condition>
										<greater-or-equal>
											<value>
												<access>
													<value>
														self
													</value>
													<value>
														end
													</value>
												</access>
											</value>
											<value>
												<access>
													<value>
														self
													</value>
													<value>
														endOfStorage
													</value>
												</access>
											</value>
										</greater-or-equal>
									</condition>
									<code>
										<call>
											<function>
												<access>
													<value>
														self
													</value>
													<value>
														reserve
													</value>
												</access>
											</function>
											<parameters>
												<parameter>
													<multiply>
														<value>
															<call>
																<function>
																	<access>
																		<value>
																			self
																		</value>
																		<value>
																			getLength
																		</value>
																	</access>
																</function>
																<parameters/>
															</call>
														</value>
														<value>
															4
														</value>
													</multiply>
												</parameter>
											</parameters>
										</call>
									</code>
								</if>
							</if-block>
						</code>
					</setter>
				</set>
			</code>
		</class>
	</code>
</module>
