<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
		</dependencies>
		<strings>
			<string id="bp_string_0">Hello\SWorld</string>
		</strings>
	</header>
	<code>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
				<meta/>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<call depth="0">
			<function>print</function>
			<parameters>
				<parameter>bp_string_0</parameter>
			</parameters>
		</call>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Math.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_sin</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_cos</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_sqrt</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_atan2</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log</name>
				<type>Float64</type>
			</extern-function>
			<extern-function depth="1">
				<name>bp_log10</name>
				<type>Float64</type>
			</extern-function>
		</extern>
		<const depth="0">
			<assign depth="1">
				<value>pi</value>
				<value>3.14159265358979323846264338327</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>DEG_TO_RAD</value>
				<value>0.0174532925199432957692369076848861</value>
			</assign>
		</const>
		<const depth="0">
			<assign depth="1">
				<value>RAD_TO_DEG</value>
				<value>57.2957795130823208767981548141052</value>
			</assign>
		</const>
		<function depth="0">
			<parameters>
				<parameter>deg</parameter>
			</parameters>
			<name>degToRad</name>
			<code>
				<return depth="1">
					<multiply>
						<value>deg</value>
						<value>DEG_TO_RAD</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>rad</parameter>
			</parameters>
			<name>radToDeg</name>
			<code>
				<return depth="1">
					<multiply>
						<value>rad</value>
						<value>RAD_TO_DEG</value>
					</multiply>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>sin</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>radian</parameter>
			</parameters>
			<name>cos</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>radian</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>num</parameter>
			</parameters>
			<name>sqr</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sqrt</function>
						<parameters>
							<parameter>num</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
				<parameter>y</parameter>
			</parameters>
			<name>aTan2</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_atan2</function>
						<parameters>
							<parameter>y</parameter>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>ln</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>lg</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_log10</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>sinDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_sin</function>
						<parameters>
							<parameter>
								<call>
									<function>degToRad</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>degree</parameter>
			</parameters>
			<name>cosDegree</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_cos</function>
						<parameters>
							<parameter>
								<call>
									<function>radToDeg</function>
									<parameters>
										<parameter>degree</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distanceSq</name>
			<code>
				<assign depth="1">
					<value>dX</value>
					<value>
						<subtract>
							<value>x2</value>
							<value>x1</value>
						</subtract>
					</value>
				</assign>
				<assign depth="1">
					<value>dY</value>
					<value>
						<subtract>
							<value>y2</value>
							<value>y1</value>
						</subtract>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>
							<multiply>
								<value>dX</value>
								<value>dX</value>
							</multiply>
						</value>
						<value>
							<multiply>
								<value>dY</value>
								<value>dY</value>
							</multiply>
						</value>
					</add>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>x1</parameter>
				<parameter>y1</parameter>
				<parameter>x2</parameter>
				<parameter>y2</parameter>
			</parameters>
			<name>distance</name>
			<code>
				<return depth="1">
					<call>
						<function>sqr</function>
						<parameters>
							<parameter>
								<call>
									<function>distanceSq</function>
									<parameters>
										<parameter>x1</parameter>
										<parameter>y1</parameter>
										<parameter>x2</parameter>
										<parameter>y2</parameter>
									</parameters>
								</call>
							</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>n</parameter>
			</parameters>
			<name>factorial</name>
			<code>
				<require depth="1">
					<greater-or-equal depth="2">
						<value>n</value>
						<value>0</value>
					</greater-or-equal>
				</require>
				<ensure depth="1">
					<greater depth="2">
						<value>result</value>
						<value>0</value>
					</greater>
				</ensure>
				<maybe depth="1">
					<declare-type depth="2">
						<value>result</value>
						<value>BigInt</value>
					</declare-type>
				</maybe>
				<test depth="1">
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>0</parameter>
											</parameters>
										</call>
									</value>
									<value>1</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>10</parameter>
											</parameters>
										</call>
									</value>
									<value>3628800</value>
								</equal>
							</parameter>
						</parameters>
					</call>
					<call depth="2">
						<function>assert</function>
						<parameters>
							<parameter>
								<equal>
									<value>
										<call>
											<function>factorial</function>
											<parameters>
												<parameter>20</parameter>
											</parameters>
										</call>
									</value>
									<value>2432902008176640000</value>
								</equal>
							</parameter>
						</parameters>
					</call>
				</test>
				<if-block depth="1">
					<if>
						<condition>
							<equal>
								<value>n</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2">1</return>
						</code>
					</if>
				</if-block>
				<return depth="1">
					<multiply>
						<value>n</value>
						<value>
							<call>
								<function>factorial</function>
								<parameters>
									<parameter>
										<subtract>
											<value>n</value>
											<value>1</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</value>
					</multiply>
				</return>
			</code>
		</function>
	</code>
</module>
