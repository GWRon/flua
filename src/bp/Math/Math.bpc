target C++
	include Math.hpp

extern
	bp_sin : Float64
	bp_cos : Float64
	bp_sqrt : Float64
	bp_atan2 : Float64
	bp_log : Float64
	bp_log10 : Float64

# Vars
const Ï€ = 3.14159265358979323846264338327
const DEG_TO_RAD = 0.0174532925199432957692369076848861
const RAD_TO_DEG = 57.2957795130823208767981548141052

# Functions
degToRad deg
	return deg * DEG_TO_RAD
	
radToDeg rad
	return rad * RAD_TO_DEG

sin radian
	return bp_sin(radian)
	
cos radian
	return bp_cos(radian)
	
sqr num
	return bp_sqrt(num)
	
aTan2 x, y
	return bp_atan2(y, x)
	
ln x
	return bp_log(x)
	
lg x
	return bp_log10(x)

sinDegree degree
	return bp_sin(degToRad(degree))
	
cosDegree degree
	return bp_cos(radToDeg(degree))
	
distanceSq x1, y1, x2, y2
	dX = x2 - x1
	dY = y2 - y1
	
	# TODO: ^2
	return dX * dX + dY * dY

distance x1, y1, x2, y2
	return sqr(distanceSq(x1, y1, x2, y2))

factorial n
	require
		n >= 0
	ensure
		result > 0
	maybe
		result : BigInt
	test
		assert factorial(0) == 1
		assert factorial(10) == 3628800
		assert factorial(20) == 2432902008176640000
	
	if n == 0
		return 1
	
	return n * factorial(n - 1)
