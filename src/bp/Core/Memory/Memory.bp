<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">Memory.hpp</include>
			</code>
		</target>
		<target depth="0">
			<name>Python3</name>
			<code>
				<include depth="1">Memory.py</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_copyMem</name>
				<meta>
					<no-side-effects>true</no-side-effects>
					<same-output-for-input>true</same-output-for-input>
				</meta>
			</extern-function>
			<extern-function depth="1">
				<name>bp_compareMem</name>
				<type>Bool</type>
				<meta>
					<no-side-effects>true</no-side-effects>
				</meta>
			</extern-function>
			<extern-function depth="1">
				<name>bp_setMem</name>
				<meta>
					<no-side-effects>true</no-side-effects>
					<same-output-for-input>true</same-output-for-input>
				</meta>
			</extern-function>
			<extern-function depth="1">
				<name>bp_gcCollect</name>
				<meta>
					<same-output-for-input>true</same-output-for-input>
					<no-side-effects>true</no-side-effects>
				</meta>
			</extern-function>
			<class depth="1">
				<name>MemPointer</name>
				<code>
					<template depth="2">
						<parameter depth="3">TDataType</parameter>
					</template>
					<function depth="2">
						<parameters>
							<parameter>size</parameter>
						</parameters>
						<name>init</name>
						<code>
							<noop depth="3"/>
						</code>
					</function>
					<function depth="2">
						<name>free</name>
						<code>
							<noop depth="3"/>
						</code>
					</function>
					<operators depth="2">
						<operator depth="3">
							<parameters>
								<parameter>index</parameter>
							</parameters>
							<name>[]</name>
							<code>
								<declare-type depth="4">
									<value>retValue</value>
									<value>TDataType</value>
								</declare-type>
								<return depth="4">retValue</return>
							</code>
						</operator>
					</operators>
					<set depth="2">
						<setter depth="3">
							<parameters>
								<parameter>nValue</parameter>
							</parameters>
							<name>data</name>
							<code>
								<noop depth="4"/>
							</code>
						</setter>
					</set>
					<get depth="2">
						<getter depth="3">
							<name>data</name>
							<code>
								<declare-type depth="4">
									<value>retValue</value>
									<value>TDataType</value>
								</declare-type>
								<return depth="4">retValue</return>
							</code>
						</getter>
					</get>
				</code>
				<meta/>
			</class>
		</extern>
		<comment>\SCopies\S#size\Selements\Sfrom\S#source\Sto\S#dest</comment>
		<function depth="0">
			<parameters>
				<parameter>source</parameter>
				<parameter>dest</parameter>
				<parameter>size</parameter>
			</parameters>
			<name>copyMem</name>
			<code>
				<call depth="1">
					<function>bp_copyMem</function>
					<parameters>
						<parameter>source</parameter>
						<parameter>dest</parameter>
						<parameter>size</parameter>
					</parameters>
				</call>
			</code>
		</function>
		<comment>\SCompares\S#size\Selements\Sin\S#source\Sand\S#dest\Sand\Sreturns\Strue\Sif\Sthey\Sare\Sequal</comment>
		<function depth="0">
			<parameters>
				<parameter>source</parameter>
				<parameter>dest</parameter>
				<parameter>size</parameter>
			</parameters>
			<name>compareMem</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_compareMem</function>
						<parameters>
							<parameter>source</parameter>
							<parameter>dest</parameter>
							<parameter>size</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<comment>\SWrites\S#value\Sto\S#size\Selements\Sin\S#dest</comment>
		<function depth="0">
			<parameters>
				<parameter>dest</parameter>
				<parameter>value</parameter>
				<parameter>size</parameter>
			</parameters>
			<name>setMem</name>
			<code>
				<call depth="1">
					<function>bp_setMem</function>
					<parameters>
						<parameter>dest</parameter>
						<parameter>value</parameter>
						<parameter>size</parameter>
					</parameters>
				</call>
			</code>
			<meta/>
		</function>
		<comment>\SActivates\Sone\Sgarbage\Scollection\Scycle\Swhich\Sdoes\Snot\Sguarantee\Sto\Sfree\Sup\Sunused\Smemory\Simmediately</comment>
		<function depth="0">
			<name>gcCollect</name>
			<code>
				<call depth="1">
					<function>bp_gcCollect</function>
					<parameters/>
				</call>
			</code>
			<meta/>
		</function>
		<comment>\SReturns\Sthe\Snext\Spower\Sof\S2\Sfor\S#x.\SThis\Sfunction\Sis\Sin\Sthe</comment>
		<comment>\Smemory\Ssection\Sbecause\Sit\Sis\Sused\Squite\Soften\Sby\Sdata\Sstructures.</comment>
		<function depth="0">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>getNextPowerOf2</name>
			<code>
				<assign-subtract depth="1">
					<value>x</value>
					<value>1</value>
				</assign-subtract>
				<assign depth="1">
					<value>x</value>
					<value>
						<bitwise-or>
							<value>
								<shift-right>
									<value>x</value>
									<value>1</value>
								</shift-right>
							</value>
							<value>x</value>
						</bitwise-or>
					</value>
				</assign>
				<assign depth="1">
					<value>x</value>
					<value>
						<bitwise-or>
							<value>
								<shift-right>
									<value>x</value>
									<value>2</value>
								</shift-right>
							</value>
							<value>x</value>
						</bitwise-or>
					</value>
				</assign>
				<assign depth="1">
					<value>x</value>
					<value>
						<bitwise-or>
							<value>
								<shift-right>
									<value>x</value>
									<value>4</value>
								</shift-right>
							</value>
							<value>x</value>
						</bitwise-or>
					</value>
				</assign>
				<assign depth="1">
					<value>x</value>
					<value>
						<bitwise-or>
							<value>
								<shift-right>
									<value>x</value>
									<value>8</value>
								</shift-right>
							</value>
							<value>x</value>
						</bitwise-or>
					</value>
				</assign>
				<assign depth="1">
					<value>x</value>
					<value>
						<bitwise-or>
							<value>
								<shift-right>
									<value>x</value>
									<value>16</value>
								</shift-right>
							</value>
							<value>x</value>
						</bitwise-or>
					</value>
				</assign>
				<return depth="1">
					<add>
						<value>x</value>
						<value>1</value>
					</add>
				</return>
			</code>
			<meta/>
		</function>
	</code>
</module>
