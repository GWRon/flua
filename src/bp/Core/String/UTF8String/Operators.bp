<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<comment>\SUTF8String\Soperators</comment>
		<class depth="0">
			<name>UTF8String</name>
			<code>
				<operators depth="1">
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>stri</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>s1</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
							<parameter>
								<declare-type>
									<value>s2</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>s1</parameter>
										<parameter>s2</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>s1</value>
									<value>Int</value>
								</declare-type>
							</parameter>
							<parameter>
								<declare-type>
									<value>s2</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>s1</parameter>
										<parameter>s2</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>s1</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
							<parameter>
								<declare-type>
									<value>s2</value>
									<value>Int</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>s1</parameter>
										<parameter>s2</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>chars</value>
									<value>
										<unmanaged>
											<value>
												<template-call>
													<value>MemPointer</value>
													<value>Byte</value>
												</template-call>
											</value>
										</unmanaged>
									</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>chars</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>num</value>
									<value>Int</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>num</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>num</value>
									<value>Int</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>*</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters/>
								</new>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>from</parameter>
							<parameter>to</parameter>
						</parameters>
						<name>[:]</name>
						<code>
							<return depth="3">
								<call>
									<function>
										<access>
											<value>my</value>
											<value>substr</value>
										</access>
									</function>
									<parameters>
										<parameter>from</parameter>
										<parameter>to</parameter>
									</parameters>
								</call>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>==</name>
						<code>
							<if-block depth="3">
								<if>
									<condition>
										<not-equal>
											<value>
												<access>
													<value>my</value>
													<value>length</value>
												</access>
											</value>
											<value>
												<access>
													<value>stri</value>
													<value>length</value>
												</access>
											</value>
										</not-equal>
									</condition>
									<code>
										<return depth="4">false</return>
									</code>
								</if>
							</if-block>
							<if-block depth="3">
								<if>
									<condition>
										<equal>
											<value>
												<access>
													<value>my</value>
													<value>data</value>
												</access>
											</value>
											<value>
												<access>
													<value>stri</value>
													<value>data</value>
												</access>
											</value>
										</equal>
									</condition>
									<code>
										<return depth="4">true</return>
									</code>
								</if>
							</if-block>
							<return depth="3">
								<call>
									<function>compareMem</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</parameter>
										<parameter>
											<access>
												<value>stri</value>
												<value>data</value>
											</access>
										</parameter>
										<parameter>
											<access>
												<value>my</value>
												<value>length</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>!=</name>
						<code>
							<if-block depth="3">
								<if>
									<condition>
										<not-equal>
											<value>
												<access>
													<value>my</value>
													<value>length</value>
												</access>
											</value>
											<value>
												<access>
													<value>stri</value>
													<value>length</value>
												</access>
											</value>
										</not-equal>
									</condition>
									<code>
										<return depth="4">true</return>
									</code>
								</if>
							</if-block>
							<if-block depth="3">
								<if>
									<condition>
										<equal>
											<value>
												<access>
													<value>my</value>
													<value>data</value>
												</access>
											</value>
											<value>
												<access>
													<value>stri</value>
													<value>data</value>
												</access>
											</value>
										</equal>
									</condition>
									<code>
										<return depth="4">false</return>
									</code>
								</if>
							</if-block>
							<return depth="3">
								<not>
									<value>
										<call>
											<function>compareMem</function>
											<parameters>
												<parameter>
													<access>
														<value>my</value>
														<value>data</value>
													</access>
												</parameter>
												<parameter>
													<access>
														<value>stri</value>
														<value>data</value>
													</access>
												</parameter>
												<parameter>
													<access>
														<value>my</value>
														<value>length</value>
													</access>
												</parameter>
											</parameters>
										</call>
									</value>
								</not>
							</return>
						</code>
						<meta/>
					</operator>
				</operators>
			</code>
		</class>
	</code>
</module>
