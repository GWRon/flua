<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
		</dependencies>
		<strings>
			<string id="bp_string_0">Inheritance\Sworking!</string>
			<string id="bp_string_1">Inheritance\SNOT\Sworking!</string>
		</strings>
	</header>
	<code>
		<comment>\SNote\Sthat\Sthis\Sis\Sa\Srecently\Sdeveloped\Sfeature\Swhich\Sis\Scurrently\Shighly\Sexperimental.</comment>
		<comment>\SNonetheless\Syou\Scan\Stry\Sand\Ssee\Sif\Sit\Sworks\Sfor\Syou,\Spress\SF5.</comment>
		<comment>\SBase\Sclass</comment>
		<class depth="0" id="1">
			<name>MyBaseClass</name>
			<code>
				<function depth="1" id="2">
					<name>init</name>
					<code>
						<noop depth="2" id="3"/>
					</code>
					<meta/>
				</function>
				<function depth="1" id="4">
					<parameters>
						<parameter>x</parameter>
					</parameters>
					<name>doSomething</name>
					<code>
						<return depth="2" id="5">
							<multiply>
								<value>x</value>
								<value>2</value>
							</multiply>
						</return>
					</code>
				</function>
				<function depth="1" id="6">
					<parameters>
						<parameter>x</parameter>
					</parameters>
					<name>doSomethingOverwritten</name>
					<code>
						<return depth="2" id="7">
							<multiply>
								<value>x</value>
								<value>3</value>
							</multiply>
						</return>
					</code>
					<meta/>
				</function>
			</code>
			<meta/>
		</class>
		<comment>\SDerived\Sclass</comment>
		<class depth="0" id="8">
			<name>MyDerivedClass</name>
			<code>
				<extends depth="1" id="9">
					<extends-class depth="2" id="10">MyBaseClass</extends-class>
				</extends>
				<function depth="1" id="11">
					<name>init</name>
					<code>
						<noop depth="2" id="12"/>
					</code>
				</function>
				<function depth="1" id="13">
					<parameters>
						<parameter>x</parameter>
					</parameters>
					<name>doSomethingOverwritten</name>
					<code>
						<return depth="2" id="14">
							<multiply>
								<value>x</value>
								<value>4</value>
							</multiply>
						</return>
					</code>
				</function>
			</code>
		</class>
		<comment>\STest\Sit</comment>
		<assign depth="0" id="15">
			<value>obj</value>
			<value>
				<new>
					<type>MyDerivedClass</type>
					<parameters/>
				</new>
			</value>
		</assign>
		<comment>\SCall\San\Soverwritten\Smethod\Sof\SMyDerivedClass\Sand\Sa\Snormal\Sone\Sof\SMyBaseClass</comment>
		<if-block depth="0" id="16">
			<if>
				<condition>
					<and>
						<value>
							<equal>
								<value>
									<call>
										<function>
											<access>
												<value>obj</value>
												<value>doSomething</value>
											</access>
										</function>
										<parameters>
											<parameter>8</parameter>
										</parameters>
									</call>
								</value>
								<value>16</value>
							</equal>
						</value>
						<value>
							<equal>
								<value>
									<call>
										<function>
											<access>
												<value>obj</value>
												<value>doSomethingOverwritten</value>
											</access>
										</function>
										<parameters>
											<parameter>20</parameter>
										</parameters>
									</call>
								</value>
								<value>80</value>
							</equal>
						</value>
					</and>
				</condition>
				<code>
					<call depth="1" id="17">
						<function>print</function>
						<parameters>
							<parameter>bp_string_0</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else depth="0" id="18">
				<code>
					<call depth="1" id="19">
						<function>print</function>
						<parameters>
							<parameter>bp_string_1</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
	</code>
</module>
