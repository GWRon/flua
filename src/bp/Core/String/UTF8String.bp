<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
			<import>bp.Core.String</import>
			<import>bp.Collection.Array</import>
		</dependencies>
		<strings>
			<string id="bp_string_0">\n</string>
		</strings>
	</header>
	<code>
		<comment>\SUTF-8\Sencoded\Simmutable\Sstring\S(only\Sfor\SC++\Starget)</comment>
		<class depth="0">
			<name>UTF8String</name>
			<code>
				<comment>\SDefault\Sconstructor</comment>
				<function depth="1">
					<name>init</name>
					<code>
						<declare-type depth="2">
							<value>
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</value>
							<value>
								<unmanaged>
									<value>
										<template-call>
											<value>MemPointer</value>
											<value>Byte</value>
										</template-call>
									</value>
								</unmanaged>
							</value>
						</declare-type>
						<assign depth="2">
							<value>
								<declare-type>
									<value>
										<access>
											<value>my</value>
											<value>lengthInBytes</value>
										</access>
									</value>
									<value>Size</value>
								</declare-type>
							</value>
							<value>0</value>
						</assign>
						<assign depth="2">
							<value>
								<declare-type>
									<value>
										<access>
											<value>my</value>
											<value>length</value>
										</access>
									</value>
									<value>Size</value>
								</declare-type>
							</value>
							<value>0</value>
						</assign>
					</code>
					<meta/>
				</function>
				<comment>\SInit\Sfrom\S2\Sstrings</comment>
				<function depth="1">
					<parameters>
						<parameter>s1</parameter>
						<parameter>s2</parameter>
					</parameters>
					<name>init</name>
					<code>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										<access>
											<value>s1</value>
											<value>lengthInBytes</value>
										</access>
									</value>
									<value>
										<access>
											<value>s2</value>
											<value>lengthInBytes</value>
										</access>
									</value>
								</add>
							</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>Byte</value>
										</template-call>
									</type>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>lengthInBytes</value>
											</access>
										</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<call depth="2">
							<function>copyMem</function>
							<parameters>
								<parameter>
									<access>
										<value>s1</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>my</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>s1</value>
										<value>lengthInBytes</value>
									</access>
								</parameter>
							</parameters>
						</call>
						<call depth="2">
							<function>copyMem</function>
							<parameters>
								<parameter>
									<access>
										<value>s2</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<add>
										<value>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</value>
										<value>
											<access>
												<value>s1</value>
												<value>lengthInBytes</value>
											</access>
										</value>
									</add>
								</parameter>
								<parameter>
									<access>
										<value>s2</value>
										<value>lengthInBytes</value>
									</access>
								</parameter>
							</parameters>
						</call>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										<access>
											<value>s1</value>
											<value>length</value>
										</access>
									</value>
									<value>
										<access>
											<value>s2</value>
											<value>length</value>
										</access>
									</value>
								</add>
							</value>
						</assign>
					</code>
					<meta/>
				</function>
				<comment>\SInit\Sfrom\SUTF8String\S+\SInteger</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>s1</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
						<parameter>
							<declare-type>
								<value>num</value>
								<value>Int</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<comment>\SMaximum\Scharacter\Scount\Sfor\S&quot;-2147483648&quot;\S=\S11\Scharacters</comment>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>Byte</value>
										</template-call>
									</type>
									<parameters>
										<parameter>
											<add>
												<value>
													<access>
														<value>s1</value>
														<value>lengthInBytes</value>
													</access>
												</value>
												<value>11</value>
											</add>
										</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<call depth="2">
							<function>copyMem</function>
							<parameters>
								<parameter>
									<access>
										<value>s1</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>my</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>s1</value>
										<value>lengthInBytes</value>
									</access>
								</parameter>
							</parameters>
						</call>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										<access>
											<value>s1</value>
											<value>lengthInBytes</value>
										</access>
									</value>
									<value>
										<call>
											<function>bp_insertInt</function>
											<parameters>
												<parameter>
													<access>
														<value>my</value>
														<value>data</value>
													</access>
												</parameter>
												<parameter>num</parameter>
												<parameter>
													<access>
														<value>s1</value>
														<value>lengthInBytes</value>
													</access>
												</parameter>
											</parameters>
										</call>
									</value>
								</add>
							</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlen_utf8</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</value>
						</assign>
					</code>
					<meta/>
				</function>
				<comment>\SInit\Sfrom\SUTF8String\S+\SCString</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>s1</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
						<parameter>
							<declare-type>
								<value>cs2</value>
								<value>
									<unmanaged>
										<value>
											<template-call>
												<value>MemPointer</value>
												<value>Byte</value>
											</template-call>
										</value>
									</unmanaged>
								</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<assign depth="2">
							<value>cs2len</value>
							<value>
								<call>
									<function>bp_strlen</function>
									<parameters>
										<parameter>cs2</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>Byte</value>
										</template-call>
									</type>
									<parameters>
										<parameter>
											<add>
												<value>
													<access>
														<value>s1</value>
														<value>lengthInBytes</value>
													</access>
												</value>
												<value>cs2len</value>
											</add>
										</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<call depth="2">
							<function>copyMem</function>
							<parameters>
								<parameter>
									<access>
										<value>s1</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>my</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>s1</value>
										<value>lengthInBytes</value>
									</access>
								</parameter>
							</parameters>
						</call>
						<call depth="2">
							<function>copyMem</function>
							<parameters>
								<parameter>cs2</parameter>
								<parameter>
									<add>
										<value>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</value>
										<value>
											<access>
												<value>s1</value>
												<value>lengthInBytes</value>
											</access>
										</value>
									</add>
								</parameter>
								<parameter>cs2len</parameter>
							</parameters>
						</call>
						<comment>\Sfor\Si\S=\S0\Suntil\Ss1.lengthInBytes</comment>
						<comment>\Tmy.data[i]\S=\Ss1.data[i]</comment>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										<access>
											<value>s1</value>
											<value>lengthInBytes</value>
										</access>
									</value>
									<value>cs2len</value>
								</add>
							</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlen_utf8</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</value>
						</assign>
					</code>
					<meta/>
				</function>
				<comment>\SInit\Sfrom\SC-String</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>bytes</value>
								<value>
									<unmanaged>
										<value>
											<template-call>
												<value>MemPointer</value>
												<value>Byte</value>
											</template-call>
										</value>
									</unmanaged>
								</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<assign depth="2">
							<value>
								<declare-type>
									<value>
										<access>
											<value>my</value>
											<value>data</value>
										</access>
									</value>
									<value>
										<unmanaged>
											<value>
												<template-call>
													<value>MemPointer</value>
													<value>Byte</value>
												</template-call>
											</value>
										</unmanaged>
									</value>
								</declare-type>
							</value>
							<value>bytes</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlen</function>
									<parameters>
										<parameter>bytes</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlen_utf8</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</value>
						</assign>
					</code>
					<meta/>
				</function>
				<comment>\SInit\Sfrom\SC-String\Sup\Sto\ScharacterCount\Scharacters</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>bytes</value>
								<value>
									<unmanaged>
										<value>
											<template-call>
												<value>MemPointer</value>
												<value>Byte</value>
											</template-call>
										</value>
									</unmanaged>
								</value>
							</declare-type>
						</parameter>
						<parameter>
							<declare-type>
								<value>characterCount</value>
								<value>Size</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<assign depth="2">
							<value>
								<declare-type>
									<value>
										<access>
											<value>my</value>
											<value>data</value>
										</access>
									</value>
									<value>
										<unmanaged>
											<value>
												<template-call>
													<value>MemPointer</value>
													<value>Byte</value>
												</template-call>
											</value>
										</unmanaged>
									</value>
								</declare-type>
							</value>
							<value>bytes</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>characterCount</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlen_utf8_xchars</function>
									<parameters>
										<parameter>bytes</parameter>
										<parameter>characterCount</parameter>
									</parameters>
								</call>
							</value>
						</assign>
					</code>
					<meta/>
				</function>
				<comment>\SInit\Sfrom\SC-String,\Sfrom\Sindex\Sup\Sto\ScharacterCount\Scharacters</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>bytes</value>
								<value>
									<unmanaged>
										<value>
											<template-call>
												<value>MemPointer</value>
												<value>Byte</value>
											</template-call>
										</value>
									</unmanaged>
								</value>
							</declare-type>
						</parameter>
						<parameter>
							<declare-type>
								<value>index</value>
								<value>Size</value>
							</declare-type>
						</parameter>
						<parameter>
							<declare-type>
								<value>characterCount</value>
								<value>Size</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<call depth="2">
							<function>bp_utf8_slice</function>
							<parameters>
								<parameter>
									<access>
										<value>my</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>my</value>
										<value>length</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>my</value>
										<value>lengthInBytes</value>
									</access>
								</parameter>
								<parameter>bytes</parameter>
								<parameter>index</parameter>
								<parameter>characterCount</parameter>
							</parameters>
						</call>
					</code>
					<meta/>
				</function>
				<comment>\SString\Suntil\Sa\Scertain\Sstring\Sappears</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>until</name>
					<code>
						<noop depth="2"/>
					</code>
					<meta/>
				</function>
				<comment>\SString\Suntil\Slast\Soccurence\Sof\Sa\Scharacter</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>untilLast</name>
					<code>
						<noop depth="2"/>
					</code>
					<meta/>
				</function>
				<comment>\SSubstring\Sfrom\Sthe\Spoint\Schars\Sappears</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>from</name>
					<code>
						<noop depth="2"/>
					</code>
					<meta/>
				</function>
				<comment>\SSubstring\Sfrom\Sthe\Slast\Soccurence\Sof\Schars</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>fromLast</name>
					<code>
						<noop depth="2"/>
					</code>
					<meta/>
				</function>
				<comment>\SLeft\Sx\Scharacters</comment>
				<function depth="1">
					<parameters>
						<parameter>length</parameter>
					</parameters>
					<name>left</name>
					<code>
						<return depth="2">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>0</parameter>
									<parameter>length</parameter>
								</parameters>
							</call>
						</return>
					</code>
					<meta/>
				</function>
				<comment>\SRight\Sx\Scharacters</comment>
				<function depth="1">
					<parameters>
						<parameter>length</parameter>
					</parameters>
					<name>right</name>
					<code>
						<return depth="2">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>
										<subtract>
											<value>
												<access>
													<value>my</value>
													<value>length</value>
												</access>
											</value>
											<value>length</value>
										</subtract>
									</parameter>
									<parameter>length</parameter>
								</parameters>
							</call>
						</return>
					</code>
					<meta/>
				</function>
				<comment>\SDelete\Scertain\Scharacters\Sfrom\Sa\Sstring</comment>
				<function depth="1">
					<parameters>
						<parameter>chars</parameter>
					</parameters>
					<name>erase</name>
					<code>
						<noop depth="2"/>
					</code>
					<meta/>
				</function>
				<comment>\SReturns\Swhether\Sthe\Sstring\Sstarts\Swith\Schars</comment>
				<function depth="1">
					<parameters>
						<parameter>chars</parameter>
					</parameters>
					<name>startsWith</name>
					<code>
						<noop depth="2"/>
					</code>
					<meta/>
				</function>
				<comment>\SReturns\Swhether\Sthe\Sstring\Sends\Swith\Schars</comment>
				<function depth="1">
					<parameters>
						<parameter>chars</parameter>
					</parameters>
					<name>endsWith</name>
					<code>
						<noop depth="2"/>
					</code>
					<meta/>
				</function>
				<comment>\SSubstring\Sfrom\Sindex\Sto\Sindex\S+\Slength</comment>
				<function depth="1">
					<parameters>
						<parameter>index</parameter>
						<parameter>length</parameter>
					</parameters>
					<name>mid</name>
					<code>
						<require depth="2">
							<greater-or-equal depth="3">
								<value>index</value>
								<value>0</value>
							</greater-or-equal>
							<less depth="3">
								<value>index</value>
								<value>
									<access>
										<value>my</value>
										<value>length</value>
									</access>
								</value>
							</less>
						</require>
						<return depth="2">
							<new>
								<type>UTF8String</type>
								<parameters>
									<parameter>
										<access>
											<value>my</value>
											<value>data</value>
										</access>
									</parameter>
									<parameter>index</parameter>
									<parameter>length</parameter>
								</parameters>
							</new>
						</return>
					</code>
					<meta/>
				</function>
				<comment>\SSubstring</comment>
				<function depth="1">
					<parameters>
						<parameter>from</parameter>
						<parameter>to</parameter>
					</parameters>
					<name>substr</name>
					<code>
						<return depth="2">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>from</parameter>
									<parameter>
										<subtract>
											<value>to</value>
											<value>from</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</return>
					</code>
					<meta/>
				</function>
				<function depth="1">
					<name>print</name>
					<code>
						<for depth="2">
							<iterator>i</iterator>
							<from>0</from>
							<until>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</until>
							<code>
								<call depth="3">
									<function>bp_print</function>
									<parameters>
										<parameter>
											<index>
												<value>
													<access>
														<value>my</value>
														<value>data</value>
													</access>
												</value>
												<value>i</value>
											</index>
										</parameter>
									</parameters>
								</call>
							</code>
						</for>
						<call depth="2">
							<function>bp_print</function>
							<parameters>
								<parameter>bp_string_0</parameter>
							</parameters>
						</call>
					</code>
					<meta/>
				</function>
				<operators depth="1">
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>stri</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>chars</value>
									<value>
										<unmanaged>
											<value>
												<template-call>
													<value>MemPointer</value>
													<value>Byte</value>
												</template-call>
											</value>
										</unmanaged>
									</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>chars</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>num</value>
									<value>Int</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>num</parameter>
									</parameters>
								</new>
							</return>
						</code>
						<meta/>
					</operator>
				</operators>
				<get depth="1">
					<getter depth="2">
						<name>data</name>
						<code>
							<return depth="3">
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</return>
						</code>
						<meta/>
					</getter>
					<getter depth="2">
						<name>length</name>
						<code>
							<ensure depth="3">
								<greater-or-equal depth="4">
									<value>result</value>
									<value>0</value>
								</greater-or-equal>
							</ensure>
							<return depth="3">
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</return>
						</code>
						<meta/>
					</getter>
					<getter depth="2">
						<name>lengthInBytes</name>
						<code>
							<ensure depth="3">
								<greater-or-equal depth="4">
									<value>result</value>
									<value>0</value>
								</greater-or-equal>
							</ensure>
							<return depth="3">
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</return>
						</code>
						<meta>
							<force-implementation>true</force-implementation>
						</meta>
					</getter>
				</get>
				<casts depth="1">
					<cast-definition depth="2">
						<to>
							<unmanaged>
								<value>
									<template-call>
										<value>MemPointer</value>
										<value>ConstChar</value>
									</template-call>
								</value>
							</unmanaged>
						</to>
						<code>
							<return depth="3">
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</return>
						</code>
						<meta/>
					</cast-definition>
				</casts>
			</code>
			<meta>
				<ensure-destructor-call>false</ensure-destructor-call>
			</meta>
		</class>
		<comment>\SExtend\Svirtual\SInt\Sclass\Sby\San\Soperator</comment>
		<class depth="0">
			<name>Int</name>
			<code>
				<operators depth="1">
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>stri</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
				</operators>
			</code>
		</class>
		<comment>\SPrints\Sa\SUTF-8\Sencoded\Sstring\Son\Sthe\Sconsole</comment>
		<function depth="0">
			<parameters>
				<parameter>
					<declare-type>
						<value>stri</value>
						<value>UTF8String</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>print</name>
			<code>
				<call depth="1">
					<function>
						<access>
							<value>stri</value>
							<value>print</value>
						</access>
					</function>
					<parameters/>
				</call>
			</code>
			<meta/>
		</function>
	</code>
</module>
