
# import
import keywordsTest2

# if
if 1
	print "#if working"

# elif
if 0
	print "#elif NOT working"
elif 1
	print "#elif working"
else
	print "#elif NOT working"

# else
if 0
	print "#else NOT working"
else
	print "#else working"

# switch
switch 21 + 21
	40, 41
		print "#switch NOT working"
	42, 43
		print "#switch working"
	44, 45
		print "#switch NOT working"

# for
xTest = 0
for xTest = 1 to 10
	xTest = xTest * 2 / 2

if xTest == 11
	print "#for working"
else
	print "#for NOT working"

# while
cTest = 0
while cTest < 10
	cTest += 2

if cTest >= 10
	print "#while working"
else
	print "#while NOT working"

# try
try
	a = 1 / 0
catch
	print "#try working"

# catch
try
	a = 1 / 0
catch e : ArrayOutOfBoundsException
	print "#catch working"

# static (preparation)
StaticClass
	init
		print "#static working"

# private and static
TestClass
	init
		... #self.privateFunc()
	
	private
		privateFunc
			static
				createdOnce = StaticClass()
			print "#private working"

obj = TestClass()

# return
halfOf a
	return a / 2

if halfOf(5) == 2.5
	print "#return working"

# const
const myConst = 13.0

if myConst == 13.0
	print "#const working"

# break
y = 0
while y < 20
	if y > 10
		break
	y += 1

if y < 20
	print "#break working"
else
	print "#break NOT working"

# continue
x = 0
y = 0
while x < 100
	x += 1
	if x % 2 != 0
		continue
	y += 1

if x == 100 and y == 50
	print "#continue working"
else
	print "#continue NOT working"

# throw
try
	throw "Simple exception"
	print "#throw NOT working"
catch e
	print "#throw working"



	