<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
		</dependencies>
		<strings>
			<string id="flua_string_0">#if\Sworking</string>
			<string id="flua_string_1">#elif\SNOT\Sworking</string>
			<string id="flua_string_2">#elif\Sworking</string>
			<string id="flua_string_3">#elif\SNOT\Sworking</string>
			<string id="flua_string_4">#else\SNOT\Sworking</string>
			<string id="flua_string_5">#else\Sworking</string>
			<string id="flua_string_6">#switch\SNOT\Sworking</string>
			<string id="flua_string_7">#switch\Sworking</string>
			<string id="flua_string_8">#switch\SNOT\Sworking</string>
			<string id="flua_string_9">#for\Sworking</string>
			<string id="flua_string_10">#for\SNOT\Sworking</string>
			<string id="flua_string_11">#while\Sworking</string>
			<string id="flua_string_12">#while\SNOT\Sworking</string>
			<string id="flua_string_13">#try\Sworking</string>
			<string id="flua_string_14">#try\SNOT\Sworking</string>
			<string id="flua_string_15">#catch\Sworking</string>
			<string id="flua_string_16">#catch\SNOT\Sworking</string>
			<string id="flua_string_17">Simple\Sexception</string>
			<string id="flua_string_18">#throw\Sworking</string>
			<string id="flua_string_19">#throw\SNOT\Sworking</string>
			<string id="flua_string_20">#static\Sworking</string>
			<string id="flua_string_21">#private\Sworking</string>
			<string id="flua_string_22">#on\Sworking</string>
			<string id="flua_string_23">#return\Sworking</string>
			<string id="flua_string_24">#const\Sworking</string>
			<string id="flua_string_25">#break\Sworking</string>
			<string id="flua_string_26">#break\SNOT\Sworking</string>
			<string id="flua_string_27">#continue\Sworking</string>
			<string id="flua_string_28">#continue\SNOT\Sworking</string>
		</strings>
	</header>
	<code>
		<comment>\SComment\Shere</comment>
		<if-block depth="0" id="1">
			<if>
				<condition>1</condition>
				<code>
					<call depth="1" id="2">
						<function>print</function>
						<parameters>
							<parameter>flua_string_0</parameter>
						</parameters>
					</call>
				</code>
			</if>
		</if-block>
		<comment>\SComment\Sfor\Sthis\Sblock</comment>
		<if-block depth="0" id="3">
			<if>
				<condition>0</condition>
				<code>
					<call depth="1" id="4">
						<function>print</function>
						<parameters>
							<parameter>flua_string_1</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else-if depth="0" id="5">
				<condition>1</condition>
				<code>
					<call depth="1" id="6">
						<function>print</function>
						<parameters>
							<parameter>flua_string_2</parameter>
						</parameters>
					</call>
				</code>
			</else-if>
			<else depth="0" id="7">
				<code>
					<call depth="1" id="8">
						<function>print</function>
						<parameters>
							<parameter>flua_string_3</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
		<comment>\SComment\S3rd\Sblock</comment>
		<if-block depth="0" id="9">
			<if>
				<condition>0</condition>
				<code>
					<call depth="1" id="10">
						<function>print</function>
						<parameters>
							<parameter>flua_string_4</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else depth="0" id="11">
				<code>
					<call depth="1" id="12">
						<function>print</function>
						<parameters>
							<parameter>flua_string_5</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
		<switch depth="0" id="13">
			<value>
				<add>
					<value>21</value>
					<value>21</value>
				</add>
			</value>
			<case depth="1" id="14">
				<values>
					<value>40</value>
					<value>41</value>
				</values>
				<code>
					<call depth="2" id="15">
						<function>print</function>
						<parameters>
							<parameter>flua_string_6</parameter>
						</parameters>
					</call>
				</code>
			</case>
			<case depth="1" id="16">
				<values>
					<value>42</value>
					<value>43</value>
				</values>
				<code>
					<call depth="2" id="17">
						<function>print</function>
						<parameters>
							<parameter>flua_string_7</parameter>
						</parameters>
					</call>
				</code>
			</case>
			<case depth="1" id="18">
				<values>
					<value>44</value>
					<value>45</value>
				</values>
				<code>
					<call depth="2" id="19">
						<function>print</function>
						<parameters>
							<parameter>flua_string_8</parameter>
						</parameters>
					</call>
				</code>
			</case>
		</switch>
		<assign depth="0" id="20">
			<value>xTest</value>
			<value>0</value>
		</assign>
		<for depth="0" id="21">
			<iterator>xTest</iterator>
			<from>1</from>
			<to>10</to>
			<code>
				<assign depth="1" id="22">
					<value>xTest</value>
					<value>
						<divide>
							<value>
								<multiply>
									<value>xTest</value>
									<value>2</value>
								</multiply>
							</value>
							<value>2</value>
						</divide>
					</value>
				</assign>
			</code>
		</for>
		<if-block depth="0" id="23">
			<if>
				<condition>
					<equal>
						<value>xTest</value>
						<value>11</value>
					</equal>
				</condition>
				<code>
					<call depth="1" id="24">
						<function>print</function>
						<parameters>
							<parameter>flua_string_9</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else depth="0" id="25">
				<code>
					<call depth="1" id="26">
						<function>print</function>
						<parameters>
							<parameter>flua_string_10</parameter>
						</parameters>
					</call>
					<call depth="1" id="27">
						<function>print</function>
						<parameters>
							<parameter>xTest</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
		<assign depth="0" id="28">
			<value>cTest</value>
			<value>0</value>
		</assign>
		<while depth="0" id="29">
			<condition>
				<less>
					<value>cTest</value>
					<value>10</value>
				</less>
			</condition>
			<code>
				<assign-add depth="1" id="30">
					<value>cTest</value>
					<value>2</value>
				</assign-add>
			</code>
		</while>
		<if-block depth="0" id="31">
			<if>
				<condition>
					<greater-or-equal>
						<value>cTest</value>
						<value>10</value>
					</greater-or-equal>
				</condition>
				<code>
					<call depth="1" id="32">
						<function>print</function>
						<parameters>
							<parameter>flua_string_11</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else depth="0" id="33">
				<code>
					<call depth="1" id="34">
						<function>print</function>
						<parameters>
							<parameter>flua_string_12</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
		<assign depth="0" id="35">
			<value>worked</value>
			<value>0</value>
		</assign>
		<try-block depth="0" id="36">
			<try>
				<code>
					<assign depth="1" id="37">
						<value>testInf</value>
						<value>
							<divide>
								<value>1</value>
								<value>0</value>
							</divide>
						</value>
					</assign>
					<call depth="1" id="38">
						<function>print</function>
						<parameters>
							<parameter>testInf</parameter>
						</parameters>
					</call>
				</code>
			</try>
			<catch depth="0" id="39">
				<variable/>
				<code>
					<assign depth="1" id="40">
						<value>worked</value>
						<value>1</value>
					</assign>
				</code>
			</catch>
		</try-block>
		<if-block depth="0" id="41">
			<if>
				<condition>worked</condition>
				<code>
					<call depth="1" id="42">
						<function>print</function>
						<parameters>
							<parameter>flua_string_13</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else depth="0" id="43">
				<code>
					<call depth="1" id="44">
						<function>print</function>
						<parameters>
							<parameter>flua_string_14</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
		<assign depth="0" id="45">
			<value>worked</value>
			<value>0</value>
		</assign>
		<try-block depth="0" id="46">
			<try>
				<code>
					<assign depth="1" id="47">
						<value>testInf</value>
						<value>
							<divide>
								<value>1</value>
								<value>0</value>
							</divide>
						</value>
					</assign>
					<call depth="1" id="48">
						<function>print</function>
						<parameters>
							<parameter>testInf</parameter>
						</parameters>
					</call>
				</code>
			</try>
			<catch depth="0" id="49">
				<variable>
					<declare-type>
						<value>e</value>
						<value>DivisionByZeroException</value>
					</declare-type>
				</variable>
				<code>
					<if-block depth="1" id="50">
						<if>
							<condition>e</condition>
							<code>
								<assign depth="2" id="51">
									<value>worked</value>
									<value>1</value>
								</assign>
							</code>
						</if>
					</if-block>
				</code>
			</catch>
			<catch depth="0" id="52">
				<variable/>
				<code>
					<noop depth="1" id="53"/>
				</code>
			</catch>
		</try-block>
		<if-block depth="0" id="54">
			<if>
				<condition>worked</condition>
				<code>
					<call depth="1" id="55">
						<function>print</function>
						<parameters>
							<parameter>flua_string_15</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else depth="0" id="56">
				<code>
					<call depth="1" id="57">
						<function>print</function>
						<parameters>
							<parameter>flua_string_16</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
		<assign depth="0" id="58">
			<value>worked</value>
			<value>0</value>
		</assign>
		<try-block depth="0" id="59">
			<try>
				<code>
					<throw depth="1" id="60">flua_string_17</throw>
				</code>
			</try>
			<catch depth="0" id="61">
				<variable>e</variable>
				<code>
					<assign depth="1" id="62">
						<value>worked</value>
						<value>1</value>
					</assign>
				</code>
			</catch>
		</try-block>
		<if-block depth="0" id="63">
			<if>
				<condition>worked</condition>
				<code>
					<call depth="1" id="64">
						<function>print</function>
						<parameters>
							<parameter>flua_string_18</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else depth="0" id="65">
				<code>
					<call depth="1" id="66">
						<function>print</function>
						<parameters>
							<parameter>flua_string_19</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
		<class depth="0" id="67">
			<name>StaticClass</name>
			<code>
				<function depth="1" id="68">
					<name>init</name>
					<code>
						<call depth="2" id="69">
							<function>print</function>
							<parameters>
								<parameter>flua_string_20</parameter>
							</parameters>
						</call>
					</code>
				</function>
			</code>
		</class>
		<class depth="0" id="70">
			<name>TestClass</name>
			<code>
				<function depth="1" id="71">
					<name>init</name>
					<code>
						<noop depth="2" id="72"/>
					</code>
				</function>
				<function depth="1" id="73">
					<name>testOn</name>
					<parameters>
						<parameter>msg</parameter>
					</parameters>
					<code>
						<call depth="2" id="74">
							<function>print</function>
							<parameters>
								<parameter>msg</parameter>
							</parameters>
						</call>
					</code>
					<meta/>
				</function>
				<private depth="1" id="75">
					<function depth="2" id="76">
						<name>privateFunc</name>
						<code>
							<call depth="3" id="77">
								<function>print</function>
								<parameters>
									<parameter>flua_string_21</parameter>
								</parameters>
							</call>
						</code>
					</function>
				</private>
			</code>
		</class>
		<assign depth="0" id="78">
			<value>obj</value>
			<value>
				<new>
					<type>TestClass</type>
					<parameters/>
				</new>
			</value>
		</assign>
		<on depth="0" id="79">
			<expression>obj</expression>
			<code>
				<call depth="1" id="80">
					<function>testOn</function>
					<parameters>
						<parameter>flua_string_22</parameter>
					</parameters>
				</call>
			</code>
		</on>
		<function depth="0" id="81">
			<name>halfOf</name>
			<parameters>
				<parameter>a</parameter>
			</parameters>
			<code>
				<return depth="1" id="82">
					<divide>
						<value>a</value>
						<value>2</value>
					</divide>
				</return>
			</code>
		</function>
		<if-block depth="0" id="83">
			<if>
				<condition>
					<equal>
						<value>
							<call>
								<function>halfOf</function>
								<parameters>
									<parameter>5</parameter>
								</parameters>
							</call>
						</value>
						<value>2.5</value>
					</equal>
				</condition>
				<code>
					<call depth="1" id="84">
						<function>print</function>
						<parameters>
							<parameter>flua_string_23</parameter>
						</parameters>
					</call>
				</code>
			</if>
		</if-block>
		<const depth="0" id="85">
			<assign depth="1" id="86">
				<value>myConst</value>
				<value>13.0</value>
			</assign>
		</const>
		<if-block depth="0" id="87">
			<if>
				<condition>
					<equal>
						<value>myConst</value>
						<value>13.0</value>
					</equal>
				</condition>
				<code>
					<call depth="1" id="88">
						<function>print</function>
						<parameters>
							<parameter>flua_string_24</parameter>
						</parameters>
					</call>
				</code>
			</if>
		</if-block>
		<assign depth="0" id="89">
			<value>yTest</value>
			<value>0</value>
		</assign>
		<while depth="0" id="90">
			<condition>
				<less>
					<value>yTest</value>
					<value>20</value>
				</less>
			</condition>
			<code>
				<if-block depth="1" id="91">
					<if>
						<condition>
							<greater>
								<value>yTest</value>
								<value>10</value>
							</greater>
						</condition>
						<code>
							<break depth="2" id="92"/>
						</code>
					</if>
				</if-block>
				<assign-add depth="1" id="93">
					<value>yTest</value>
					<value>1</value>
				</assign-add>
			</code>
		</while>
		<if-block depth="0" id="94">
			<if>
				<condition>
					<less>
						<value>yTest</value>
						<value>20</value>
					</less>
				</condition>
				<code>
					<call depth="1" id="95">
						<function>print</function>
						<parameters>
							<parameter>flua_string_25</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else depth="0" id="96">
				<code>
					<call depth="1" id="97">
						<function>print</function>
						<parameters>
							<parameter>flua_string_26</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
		<assign depth="0" id="98">
			<value>xTest</value>
			<value>0</value>
		</assign>
		<assign depth="0" id="99">
			<value>yTest</value>
			<value>0</value>
		</assign>
		<while depth="0" id="100">
			<condition>
				<less>
					<value>xTest</value>
					<value>100</value>
				</less>
			</condition>
			<code>
				<assign-add depth="1" id="101">
					<value>xTest</value>
					<value>1</value>
				</assign-add>
				<if-block depth="1" id="102">
					<if>
						<condition>
							<not-equal>
								<value>
									<modulo>
										<value>xTest</value>
										<value>2</value>
									</modulo>
								</value>
								<value>0</value>
							</not-equal>
						</condition>
						<code>
							<continue depth="2" id="103"/>
						</code>
					</if>
				</if-block>
				<assign-add depth="1" id="104">
					<value>yTest</value>
					<value>1</value>
				</assign-add>
			</code>
		</while>
		<if-block depth="0" id="105">
			<if>
				<condition>
					<and>
						<value>
							<equal>
								<value>xTest</value>
								<value>100</value>
							</equal>
						</value>
						<value>
							<equal>
								<value>yTest</value>
								<value>50</value>
							</equal>
						</value>
					</and>
				</condition>
				<code>
					<call depth="1" id="106">
						<function>print</function>
						<parameters>
							<parameter>flua_string_27</parameter>
						</parameters>
					</call>
				</code>
			</if>
			<else depth="0" id="107">
				<code>
					<call depth="1" id="108">
						<function>print</function>
						<parameters>
							<parameter>flua_string_28</parameter>
						</parameters>
					</call>
				</code>
			</else>
		</if-block>
	</code>
</module>
