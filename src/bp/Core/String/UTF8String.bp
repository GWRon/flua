<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
			<import>bp.Core.String</import>
			<import>bp.Collection.Array</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<comment>\SUTF-8\Sencoded\Simmutable\Sstring</comment>
		<class depth="0">
			<name>UTF8String</name>
			<code>
				<comment>\SDefault\Sconstructor</comment>
				<function depth="1">
					<name>init</name>
					<code>
						<declare-type depth="2">
							<value>
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</value>
							<value>
								<unmanaged>
									<value>
										<template-call>
											<value>MemPointer</value>
											<value>Byte</value>
										</template-call>
									</value>
								</unmanaged>
							</value>
						</declare-type>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>0</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>0</value>
						</assign>
						<comment>my.data[0]\S=\S0</comment>
					</code>
				</function>
				<comment>\SInit\Sfrom\S2\Sstrings</comment>
				<function depth="1">
					<parameters>
						<parameter>s1</parameter>
						<parameter>s2</parameter>
					</parameters>
					<name>init</name>
					<code>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										<access>
											<value>s1</value>
											<value>lengthInBytes</value>
										</access>
									</value>
									<value>
										<access>
											<value>s2</value>
											<value>lengthInBytes</value>
										</access>
									</value>
								</add>
							</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>Byte</value>
										</template-call>
									</type>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>lengthInBytes</value>
											</access>
										</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<for depth="2">
							<iterator>i</iterator>
							<from>0</from>
							<until>
								<access>
									<value>s1</value>
									<value>lengthInBytes</value>
								</access>
							</until>
							<code>
								<assign depth="3">
									<value>
										<index>
											<value>
												<access>
													<value>my</value>
													<value>data</value>
												</access>
											</value>
											<value>i</value>
										</index>
									</value>
									<value>
										<index>
											<value>
												<access>
													<value>s1</value>
													<value>data</value>
												</access>
											</value>
											<value>i</value>
										</index>
									</value>
								</assign>
							</code>
						</for>
						<for depth="2">
							<iterator>i</iterator>
							<from>0</from>
							<until>
								<access>
									<value>s2</value>
									<value>lengthInBytes</value>
								</access>
							</until>
							<code>
								<assign depth="3">
									<value>
										<index>
											<value>
												<access>
													<value>my</value>
													<value>data</value>
												</access>
											</value>
											<value>
												<add>
													<value>i</value>
													<value>
														<access>
															<value>s1</value>
															<value>lengthInBytes</value>
														</access>
													</value>
												</add>
											</value>
										</index>
									</value>
									<value>
										<index>
											<value>
												<access>
													<value>s2</value>
													<value>data</value>
												</access>
											</value>
											<value>i</value>
										</index>
									</value>
								</assign>
							</code>
						</for>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlen_utf8</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</value>
						</assign>
					</code>
				</function>
				<comment>\SInit\Sfrom\Sstring\S+\Sinteger</comment>
				<function depth="1">
					<parameters>
						<parameter>s1</parameter>
						<parameter>
							<declare-type>
								<value>num</value>
								<value>Int</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<comment>\SMaximum\Scharacter\Scount\Sfor\S&quot;-2147483648&quot;\S=\S11\Scharacters</comment>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>Byte</value>
										</template-call>
									</type>
									<parameters>
										<parameter>
											<add>
												<value>
													<access>
														<value>s1</value>
														<value>lengthInBytes</value>
													</access>
												</value>
												<value>11</value>
											</add>
										</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<for depth="2">
							<iterator>i</iterator>
							<from>0</from>
							<until>
								<access>
									<value>s1</value>
									<value>lengthInBytes</value>
								</access>
							</until>
							<code>
								<assign depth="3">
									<value>
										<index>
											<value>
												<access>
													<value>my</value>
													<value>data</value>
												</access>
											</value>
											<value>i</value>
										</index>
									</value>
									<value>
										<index>
											<value>
												<access>
													<value>s1</value>
													<value>data</value>
												</access>
											</value>
											<value>i</value>
										</index>
									</value>
								</assign>
							</code>
						</for>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										<access>
											<value>s1</value>
											<value>lengthInBytes</value>
										</access>
									</value>
									<value>
										<call>
											<function>bp_insertInt</function>
											<parameters>
												<parameter>
													<access>
														<value>my</value>
														<value>data</value>
													</access>
												</parameter>
												<parameter>num</parameter>
												<parameter>
													<access>
														<value>s1</value>
														<value>lengthInBytes</value>
													</access>
												</parameter>
											</parameters>
										</call>
									</value>
								</add>
							</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlen_utf8</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</value>
						</assign>
					</code>
				</function>
				<comment>\SInit\Sfrom\SC-String</comment>
				<function depth="1">
					<parameters>
						<parameter>
							<declare-type>
								<value>bytes</value>
								<value>
									<unmanaged>
										<value>
											<template-call>
												<value>MemPointer</value>
												<value>Byte</value>
											</template-call>
										</value>
									</unmanaged>
								</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<assign depth="2">
							<value>
								<declare-type>
									<value>
										<access>
											<value>my</value>
											<value>data</value>
										</access>
									</value>
									<value>
										<unmanaged>
											<value>
												<template-call>
													<value>MemPointer</value>
													<value>Byte</value>
												</template-call>
											</value>
										</unmanaged>
									</value>
								</declare-type>
							</value>
							<value>bytes</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlen</function>
									<parameters>
										<parameter>bytes</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<assign depth="2">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlen_utf8</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<comment>my.data\S=\Sbytes</comment>
						<comment>my.lengthInBytes\S=\Sbp_strlen(bytes)</comment>
					</code>
				</function>
				<operators depth="1">
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>stri</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>num</value>
									<value>Int</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>num</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
				</operators>
				<get depth="1">
					<getter depth="2">
						<name>data</name>
						<code>
							<return depth="3">
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</return>
						</code>
					</getter>
					<getter depth="2">
						<name>length</name>
						<code>
							<ensure depth="3">
								<greater-or-equal depth="4">
									<value>result</value>
									<value>0</value>
								</greater-or-equal>
							</ensure>
							<return depth="3">
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</return>
						</code>
					</getter>
					<getter depth="2">
						<name>lengthInBytes</name>
						<code>
							<ensure depth="3">
								<greater-or-equal depth="4">
									<value>result</value>
									<value>0</value>
								</greater-or-equal>
							</ensure>
							<return depth="3">
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</return>
						</code>
					</getter>
				</get>
				<casts depth="1">
					<cast-definition depth="2">
						<to>
							<unmanaged>
								<value>
									<template-call>
										<value>MemPointer</value>
										<value>ConstChar</value>
									</template-call>
								</value>
							</unmanaged>
						</to>
						<code>
							<return depth="3">
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</return>
						</code>
					</cast-definition>
				</casts>
			</code>
		</class>
		<comment>\SExtend\Svirtual\SInt\Sclass\Sby\San\Soperator</comment>
		<class depth="0">
			<name>Int</name>
			<code>
				<operators depth="1">
					<operator depth="2">
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>stri</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
				</operators>
			</code>
		</class>
		<comment>\SPrints\Sa\SUTF-8\Sencoded\Sstring\Son\Sthe\Sconsole</comment>
		<function depth="0">
			<parameters>
				<parameter>
					<declare-type>
						<value>stri</value>
						<value>UTF8String</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>print</name>
			<code>
				<call depth="1">
					<function>bp_println</function>
					<parameters>
						<parameter>
							<access>
								<value>stri</value>
								<value>data</value>
							</access>
						</parameter>
					</parameters>
				</call>
			</code>
		</function>
	</code>
</module>
