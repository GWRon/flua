<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
			<import>public.Graphics.GLEW</import>
			<import>public.Graphics.GLU</import>
			<import>public.Graphics.GLUT</import>
			<import>public.Graphics.OpenGL</import>
			<import>public.Graphics.FreeImage</import>
			<import>public.Math.GLM</import>
			<import>flua.Math.Geometry</import>
			<import>flua.FileSystem</import>
			<import>GraphicsWindow</import>
			<import>Material</import>
			<import>Texture</import>
			<import>Mesh</import>
			<import>Scene</import>
		</dependencies>
		<strings>
			<string id="flua_string_0">Desktop\Ssize:\S</string>
			<string id="flua_string_1">\Sx\S</string>
		</strings>
	</header>
	<code>
		<target depth="0" id="1">
			<name>C++</name>
			<code>
				<include depth="1" id="2">Flua.hpp</include>
			</code>
		</target>
		<extern depth="0" id="3">
			<namespace depth="1" id="4">
				<name>flua</name>
				<code>
					<extern-function depth="2" id="5">
						<name>createGLUTWindow</name>
						<type>Int</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="6">
						<name>createShader</name>
						<type>GLuint</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="7">
						<name>createGLSLProgram</name>
						<type>GLuint</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="8">
						<name>createGLSLProgramAttribute</name>
						<type>GLint</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="9">
						<name>createGLSLProgramUniform</name>
						<type>GLint</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="10">
						<name>createBuffer</name>
						<type>GLuint</type>
					</extern-function>
					<extern-function depth="2" id="11">
						<name>loadTexture</name>
						<type>TextureInfo</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="12">
						<name>initGLUT</name>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="13">
						<name>printGLError</name>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="14">
						<name>setActiveProgram</name>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="15">
						<name>setTransform</name>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="16">
						<name>setCamera</name>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="17">
						<name>setVSync</name>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="18">
						<name>getLastGLError</name>
						<type>String</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function depth="2" id="19">
						<name>getMouseX</name>
						<type>Int</type>
						<meta>
							<same-output-for-input>false</same-output-for-input>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function depth="2" id="20">
						<name>getMouseY</name>
						<type>Int</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function depth="2" id="21">
						<name>getScreenWidth</name>
						<type>UInt</type>
						<meta>
							<same-output-for-input>false</same-output-for-input>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function depth="2" id="22">
						<name>getScreenHeight</name>
						<type>UInt</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function depth="2" id="23">
						<name>isKeyDown</name>
						<type>Bool</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
				</code>
			</namespace>
			<class depth="1" id="24">
				<name>TextureInfo</name>
				<code>
					<public depth="2" id="25">
						<public-member depth="3" id="26">
							<declare-type>
								<value>handle</value>
								<value>GLuint</value>
							</declare-type>
						</public-member>
						<public-member depth="3" id="27">
							<declare-type>
								<value>width</value>
								<value>UInt</value>
							</declare-type>
						</public-member>
						<public-member depth="3" id="28">
							<declare-type>
								<value>height</value>
								<value>UInt</value>
							</declare-type>
						</public-member>
					</public>
					<function depth="2" id="29">
						<name>init</name>
						<code>
							<noop depth="3" id="30"/>
						</code>
						<meta/>
					</function>
				</code>
				<meta/>
			</class>
		</extern>
		<comment>\SReturns\Sthe\Slast\SOpenGL\Serror\Sas\Sa\Sstring</comment>
		<function depth="0" id="31">
			<name>getLastGLError</name>
			<code>
				<return depth="1" id="32">
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getLastGLError</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<comment>\SReturns\Sthe\S#x\Scoordinate\Sof\Sthe\Smouse\Spointer</comment>
		<comment>\Srelative\Sto\Sthe\Scurrent\Swindow.</comment>
		<function depth="0" id="33">
			<name>getMouseX</name>
			<code>
				<return depth="1" id="34">
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getMouseX</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Sthe\S#y\Scoordinate\Sof\Sthe\Smouse\Spointer</comment>
		<comment>\Srelative\Sto\Sthe\Scurrent\Swindow.</comment>
		<function depth="0" id="35">
			<name>getMouseY</name>
			<code>
				<return depth="1" id="36">
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getMouseY</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Sthe\Swidth\Sof\Sthe\Sscreen</comment>
		<function depth="0" id="37">
			<parameters>
				<parameter>
					<assign>
						<value>id</value>
						<value>
							<negative>
								<value>1</value>
							</negative>
						</value>
					</assign>
				</parameter>
			</parameters>
			<name>getScreenWidth</name>
			<code>
				<return depth="1" id="38">
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getScreenWidth</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<comment>\SReturns\Sthe\Sheight\Sof\Sthe\Sscreen</comment>
		<function depth="0" id="39">
			<parameters>
				<parameter>
					<assign>
						<value>id</value>
						<value>
							<negative>
								<value>1</value>
							</negative>
						</value>
					</assign>
				</parameter>
			</parameters>
			<name>getScreenHeight</name>
			<code>
				<return depth="1" id="40">
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>getScreenHeight</value>
							</access>
						</function>
						<parameters/>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<comment>\SSets\Swhether\SVSync\Sshould\Sbe\Senabled\Sor\Snot</comment>
		<function depth="0" id="41">
			<parameters>
				<parameter>enabled</parameter>
			</parameters>
			<name>setVSync</name>
			<code>
				<call depth="1" id="42">
					<function>
						<access>
							<value>flua</value>
							<value>setVSync</value>
						</access>
					</function>
					<parameters>
						<parameter>enabled</parameter>
					</parameters>
				</call>
			</code>
			<meta/>
		</function>
		<comment>\SReturns\Strue\Sif\Sthe\Sgiven\S#key\Sis\Sbeing\Spressed,\Sfalse\Sotherwise</comment>
		<function depth="0" id="43">
			<parameters>
				<parameter>
					<declare-type>
						<value>key</value>
						<value>Key</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>isKeyDown</name>
			<code>
				<return depth="1" id="44">
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>isKeyDown</value>
							</access>
						</function>
						<parameters>
							<parameter>key</parameter>
						</parameters>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<comment>\SToggles\Sfullscreen\Smode</comment>
		<function depth="0" id="45">
			<name>toggleFullScreen</name>
			<code>
				<call depth="1" id="46">
					<function>glutFullScreenToggle</function>
					<parameters/>
				</call>
			</code>
			<meta/>
		</function>
		<comment>\SReturns\Swhether\Sthe\Scurrent\Swindows\Sis\Sin\Sfullscreen\Smode</comment>
		<function depth="0" id="47">
			<name>isFullScreen</name>
			<code>
				<return depth="1" id="48">
					<call>
						<function>glutGet</function>
						<parameters>
							<parameter>GLUT_FULL_SCREEN</parameter>
						</parameters>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<comment>\SUsage\Sexample</comment>
		<test depth="0" id="49">
			<code>
				<call depth="1" id="50">
					<function>print</function>
					<parameters>
						<parameter>
							<add>
								<value>
									<add>
										<value>
											<add>
												<value>flua_string_0</value>
												<value>
													<call>
														<function>getScreenWidth</function>
														<parameters/>
													</call>
												</value>
											</add>
										</value>
										<value>flua_string_1</value>
									</add>
								</value>
								<value>
									<call>
										<function>getScreenHeight</function>
										<parameters/>
									</call>
								</value>
							</add>
						</parameter>
					</parameters>
				</call>
			</code>
		</test>
	</code>
</module>
