<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
			<import>FileReadStream</import>
			<import>FileWriteStream</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<target depth="0" id="1">
			<name>C++</name>
			<code>
				<include depth="1" id="2">File.hpp</include>
			</code>
		</target>
		<extern depth="0" id="3">
			<namespace depth="1" id="4">
				<name>bp</name>
				<code>
					<extern-function depth="2" id="5">
						<name>fileModificationTime</name>
						<type>Int64</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function depth="2" id="6">
						<name>fileExists</name>
						<type>Bool</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function depth="2" id="7">
						<name>fileSize</name>
						<type>Size</type>
						<meta>
							<no-side-effects>true</no-side-effects>
						</meta>
					</extern-function>
					<extern-function depth="2" id="8">
						<name>deleteFile</name>
						<type>Bool</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="9">
						<name>renameFile</name>
						<type>Bool</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="10">
						<name>fopen</name>
						<type>FileHandle</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="11">
						<name>fwrite</name>
						<type>Size</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="12">
						<name>fread</name>
						<type>Size</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="13">
						<name>fclose</name>
						<type>Bool</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="14">
						<name>fflush</name>
						<type>Bool</type>
						<meta/>
					</extern-function>
					<extern-function depth="2" id="15">
						<name>readLine</name>
						<type>String</type>
						<meta/>
					</extern-function>
				</code>
			</namespace>
			<class depth="1" id="16">
				<name>FileHandle</name>
				<code>
					<function depth="2" id="17">
						<name>init</name>
						<code>
							<noop depth="3" id="18"/>
						</code>
					</function>
				</code>
			</class>
		</extern>
		<comment>\SImmutable\Sfile\Sobject</comment>
		<class depth="0" id="19">
			<name>File</name>
			<code>
				<function depth="1" id="20">
					<parameters>
						<parameter>
							<access>
								<value>my</value>
								<value>path</value>
							</access>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<noop depth="2" id="21"/>
					</code>
				</function>
				<function depth="1" id="22">
					<name>createReadStream</name>
					<code>
						<return depth="2" id="23">
							<new>
								<type>FileReadStream</type>
								<parameters>
									<parameter>
										<access>
											<value>my</value>
											<value>path</value>
										</access>
									</parameter>
								</parameters>
							</new>
						</return>
					</code>
				</function>
				<function depth="1" id="24">
					<name>createWriteStream</name>
					<code>
						<return depth="2" id="25">
							<new>
								<type>FileWriteStream</type>
								<parameters>
									<parameter>
										<access>
											<value>my</value>
											<value>path</value>
										</access>
									</parameter>
								</parameters>
							</new>
						</return>
					</code>
				</function>
				<comment>\STODO:\SImplement\Sit.</comment>
				<function depth="1" id="26">
					<parameters>
						<parameter>otherPath</parameter>
					</parameters>
					<name>relativePathTo</name>
					<code>
						<noop depth="2" id="27"/>
					</code>
				</function>
				<get depth="1" id="28">
					<getter depth="2" id="29">
						<name>creationTime</name>
						<code>
							<return depth="3" id="30">0</return>
						</code>
					</getter>
					<getter depth="2" id="31">
						<name>modificationTime</name>
						<code>
							<return depth="3" id="32">
								<call>
									<function>fileModificationTime</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>path</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</return>
						</code>
					</getter>
					<getter depth="2" id="33">
						<name>exists</name>
						<code>
							<return depth="3" id="34">
								<call>
									<function>fileExists</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>path</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</return>
						</code>
					</getter>
					<getter depth="2" id="35">
						<name>path</name>
						<code>
							<return depth="3" id="36">
								<access>
									<value>my</value>
									<value>path</value>
								</access>
							</return>
						</code>
					</getter>
					<getter depth="2" id="37">
						<name>absolutePath</name>
						<code>
							<noop depth="3" id="38"/>
						</code>
					</getter>
					<getter depth="2" id="39">
						<name>relativePath</name>
						<code>
							<noop depth="3" id="40"/>
						</code>
					</getter>
				</get>
				<casts depth="1" id="41">
					<cast-definition depth="2" id="42">
						<to>String</to>
						<code>
							<return depth="3" id="43">
								<access>
									<value>my</value>
									<value>path</value>
								</access>
							</return>
						</code>
					</cast-definition>
				</casts>
			</code>
		</class>
		<comment>\SDeletes\Sthe\Sgiven\Sfile\S#path\Sand\Sreturns\Strue\Sif\Sit\Swas\Ssuccessful</comment>
		<function depth="0" id="44">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>deleteFile</name>
			<code>
				<return depth="1" id="45">
					<call>
						<function>
							<access>
								<value>bp</value>
								<value>deleteFile</value>
							</access>
						</function>
						<parameters>
							<parameter>path</parameter>
						</parameters>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<comment>\SRenames\Sa\Sfile\Sfrom\S#from\Sto\S#to\Sand\Sreturns\Strue\Sif\Sit\Swas\Ssuccessful</comment>
		<function depth="0" id="46">
			<parameters>
				<parameter>from</parameter>
				<parameter>to</parameter>
			</parameters>
			<name>renameFile</name>
			<code>
				<return depth="1" id="47">
					<call>
						<function>
							<access>
								<value>bp</value>
								<value>renameFile</value>
							</access>
						</function>
						<parameters>
							<parameter>from</parameter>
							<parameter>to</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Strue\Sif\Sthe\Sfile\Sat\S#path\Sexists,\Sfalse\Sotherwise</comment>
		<function depth="0" id="48">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>fileExists</name>
			<code>
				<return depth="1" id="49">
					<call>
						<function>
							<access>
								<value>bp</value>
								<value>fileExists</value>
							</access>
						</function>
						<parameters>
							<parameter>path</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Sthe\Sfile\Ssize\Sof\S#path\Sin\Sbytes</comment>
		<function depth="0" id="50">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>fileSize</name>
			<code>
				<return depth="1" id="51">
					<call>
						<function>
							<access>
								<value>bp</value>
								<value>fileSize</value>
							</access>
						</function>
						<parameters>
							<parameter>path</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Sthe\Stime\Sstamp\Sthe\Sfile\Sat\Spath\Shas\Sbeen\Smodified\Slast</comment>
		<function depth="0" id="52">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>fileModificationTime</name>
			<code>
				<return depth="1" id="53">
					<call>
						<function>
							<access>
								<value>bp</value>
								<value>fileModificationTime</value>
							</access>
						</function>
						<parameters>
							<parameter>path</parameter>
						</parameters>
					</call>
				</return>
			</code>
		</function>
		<comment>\SReturns\Sthe\Swhole\Sfile\Scontent\Sof\S#path</comment>
		<function depth="0" id="54">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>readFile</name>
			<code>
				<in depth="1" id="55">
					<expression>
						<assign>
							<value>f</value>
							<value>
								<new>
									<type>FileReadStream</type>
									<parameters>
										<parameter>path</parameter>
									</parameters>
								</new>
							</value>
						</assign>
					</expression>
					<code>
						<assign depth="2" id="56">
							<value>data</value>
							<value>
								<call>
									<function>
										<access>
											<value>f</value>
											<value>read</value>
										</access>
									</function>
									<parameters/>
								</call>
							</value>
						</assign>
					</code>
				</in>
				<return depth="1" id="57">data</return>
			</code>
		</function>
		<comment>\SWrites\Sall\S#data\Sto\S#path\Sat\Sonce</comment>
		<function depth="0" id="58">
			<parameters>
				<parameter>path</parameter>
				<parameter>data</parameter>
			</parameters>
			<name>writeFile</name>
			<code>
				<in depth="1" id="59">
					<expression>
						<assign>
							<value>f</value>
							<value>
								<new>
									<type>FileWriteStream</type>
									<parameters>
										<parameter>path</parameter>
									</parameters>
								</new>
							</value>
						</assign>
					</expression>
					<code>
						<call depth="2" id="60">
							<function>
								<access>
									<value>f</value>
									<value>write</value>
								</access>
							</function>
							<parameters>
								<parameter>data</parameter>
							</parameters>
						</call>
					</code>
				</in>
			</code>
		</function>
		<comment>\SCopies\Sa\Sfile\Sfrom\Slocation\S#from\Sto\S#to,\Sboth\Sneed\Sto\Sbe\Sfile\Snames,\Snot\Sdirectories</comment>
		<function depth="0" id="61">
			<parameters>
				<parameter>from</parameter>
				<parameter>to</parameter>
			</parameters>
			<name>copyFile</name>
			<code>
				<if-block depth="1" id="62">
					<if>
						<condition>
							<equal>
								<value>from</value>
								<value>to</value>
							</equal>
						</condition>
						<code>
							<return depth="2" id="63"/>
						</code>
					</if>
				</if-block>
				<call depth="1" id="64">
					<function>writeFile</function>
					<parameters>
						<parameter>to</parameter>
						<parameter>
							<call>
								<function>readFile</function>
								<parameters>
									<parameter>from</parameter>
								</parameters>
							</call>
						</parameter>
					</parameters>
				</call>
			</code>
		</function>
	</code>
</module>
