<module>
	<header>
		<title/>
		<dependencies>
			<import>
				bp.Core
			</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<class>
			<name>
				DataFlowTest
			</name>
			<code>
				<function>
					<name>
						init
					</name>
					<code>
						<assign>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										x
									</value>
								</access>
							</value>
							<value>
								10
							</value>
						</assign>
						<assign>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										y
									</value>
								</access>
							</value>
							<value>
								20
							</value>
						</assign>
						<flow-to>
							<value>
								<multiply>
									<value>
										<access>
											<value>
												self
											</value>
											<value>
												x
											</value>
										</access>
									</value>
									<value>
										2
									</value>
								</multiply>
							</value>
							<value>
								<access>
									<value>
										self
									</value>
									<value>
										z
									</value>
								</access>
							</value>
						</flow-to>
					</code>
				</function>
				<get>
					<getter>
						<name>
							x
						</name>
						<code>
							<return>
								x
							</return>
						</code>
					</getter>
					<getter>
						<name>
							y
						</name>
						<code>
							<return>
								y
							</return>
						</code>
					</getter>
				</get>
			</code>
		</class>
		<assign>
			<value>
				a
			</value>
			<value>
				<new>
					<type>
						DataFlowTest
					</type>
					<parameters/>
				</new>
			</value>
		</assign>
		<call>
			<function>
				print
			</function>
			<parameters>
				<parameter>
					<access>
						<value>
							a
						</value>
						<value>
							x
						</value>
					</access>
				</parameter>
			</parameters>
		</call>
		<call>
			<function>
				print
			</function>
			<parameters>
				<parameter>
					<access>
						<value>
							a
						</value>
						<value>
							y
						</value>
					</access>
				</parameter>
			</parameters>
		</call>
	</code>
</module>
