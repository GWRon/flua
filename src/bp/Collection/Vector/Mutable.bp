<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
			<import>bp.Core.Memory</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<comment>\SMutable\Svector</comment>
		<class depth="0" id="1">
			<name>MutableVector</name>
			<code>
				<template depth="1" id="2">
					<parameter depth="2" id="3">TDataType</parameter>
				</template>
				<function depth="1" id="4">
					<parameters>
						<parameter>
							<assign>
								<value>
									<declare-type>
										<value>size</value>
										<value>Size</value>
									</declare-type>
								</value>
								<value>1024</value>
							</assign>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<assign depth="2" id="5">
							<value>
								<access>
									<value>my</value>
									<value>start</value>
								</access>
							</value>
							<value>
								<unmanaged>
									<value>
										<new>
											<type>
												<template-call>
													<value>MemPointer</value>
													<value>TDataType</value>
												</template-call>
											</type>
											<parameters>
												<parameter>size</parameter>
											</parameters>
										</new>
									</value>
								</unmanaged>
							</value>
						</assign>
						<assign depth="2" id="6">
							<value>
								<access>
									<value>my</value>
									<value>end</value>
								</access>
							</value>
							<value>
								<access>
									<value>my</value>
									<value>start</value>
								</access>
							</value>
						</assign>
						<assign depth="2" id="7">
							<value>
								<access>
									<value>my</value>
									<value>endOfStorage</value>
								</access>
							</value>
							<value>
								<add>
									<value>
										<access>
											<value>my</value>
											<value>start</value>
										</access>
									</value>
									<value>size</value>
								</add>
							</value>
						</assign>
					</code>
					<meta/>
				</function>
				<function depth="1" id="8">
					<name>finalize</name>
					<code>
						<call depth="2" id="9">
							<function>
								<access>
									<value>
										<access>
											<value>my</value>
											<value>start</value>
										</access>
									</value>
									<value>free</value>
								</access>
							</function>
							<parameters/>
						</call>
					</code>
					<meta/>
				</function>
				<comment>\SAdds\San\S#element\Sto\Sthe\Sarray\Sand\Sresizes\Sit\Sif\Sthere\Sis\Snot\Senough\Sspace</comment>
				<function depth="1" id="10">
					<parameters>
						<parameter>element</parameter>
					</parameters>
					<name>add</name>
					<code>
						<assign depth="2" id="11">
							<value>
								<access>
									<value>
										<access>
											<value>my</value>
											<value>end</value>
										</access>
									</value>
									<value>data</value>
								</access>
							</value>
							<value>element</value>
						</assign>
						<assign-add depth="2" id="12">
							<value>
								<access>
									<value>my</value>
									<value>end</value>
								</access>
							</value>
							<value>1</value>
						</assign-add>
						<if-block depth="2" id="13">
							<if>
								<condition>
									<equal>
										<value>
											<access>
												<value>my</value>
												<value>end</value>
											</access>
										</value>
										<value>
											<access>
												<value>my</value>
												<value>endOfStorage</value>
											</access>
										</value>
									</equal>
								</condition>
								<code>
									<call depth="3" id="14">
										<function>
											<access>
												<value>my</value>
												<value>reserve</value>
											</access>
										</function>
										<parameters>
											<parameter>
												<multiply>
													<value>
														<call>
															<function>
																<access>
																	<value>my</value>
																	<value>getLength</value>
																</access>
															</function>
															<parameters/>
														</call>
													</value>
													<value>4</value>
												</multiply>
											</parameter>
										</parameters>
									</call>
								</code>
							</if>
						</if-block>
					</code>
					<meta/>
				</function>
				<function depth="1" id="15">
					<parameters>
						<parameter>
							<declare-type>
								<value>newSize</value>
								<value>Size</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>reserve</name>
					<code>
						<assign depth="2" id="16">
							<value>currentSize</value>
							<value>
								<call>
									<function>
										<access>
											<value>my</value>
											<value>getLength</value>
										</access>
									</function>
									<parameters/>
								</call>
							</value>
						</assign>
						<assign depth="2" id="17">
							<value>newMem</value>
							<value>
								<unmanaged>
									<value>
										<new>
											<type>
												<template-call>
													<value>MemPointer</value>
													<value>TDataType</value>
												</template-call>
											</type>
											<parameters>
												<parameter>newSize</parameter>
											</parameters>
										</new>
									</value>
								</unmanaged>
							</value>
						</assign>
						<call depth="2" id="18">
							<function>copyMem</function>
							<parameters>
								<parameter>
									<access>
										<value>my</value>
										<value>start</value>
									</access>
								</parameter>
								<parameter>newMem</parameter>
								<parameter>currentSize</parameter>
							</parameters>
						</call>
						<call depth="2" id="19">
							<function>
								<access>
									<value>
										<access>
											<value>my</value>
											<value>start</value>
										</access>
									</value>
									<value>free</value>
								</access>
							</function>
							<parameters/>
						</call>
						<assign depth="2" id="20">
							<value>
								<access>
									<value>my</value>
									<value>end</value>
								</access>
							</value>
							<value>
								<add>
									<value>newMem</value>
									<value>currentSize</value>
								</add>
							</value>
						</assign>
						<assign depth="2" id="21">
							<value>
								<access>
									<value>my</value>
									<value>start</value>
								</access>
							</value>
							<value>newMem</value>
						</assign>
						<assign depth="2" id="22">
							<value>
								<access>
									<value>my</value>
									<value>endOfStorage</value>
								</access>
							</value>
							<value>
								<add>
									<value>newMem</value>
									<value>newSize</value>
								</add>
							</value>
						</assign>
					</code>
					<meta/>
				</function>
				<function depth="1" id="23">
					<name>removeLast</name>
					<code>
						<require depth="2" id="24">
							<greater depth="3" id="25">
								<value>
									<access>
										<value>my</value>
										<value>length</value>
									</access>
								</value>
								<value>0</value>
							</greater>
						</require>
						<if-block depth="2" id="26">
							<if>
								<condition>
									<not-equal>
										<value>
											<access>
												<value>my</value>
												<value>end</value>
											</access>
										</value>
										<value>
											<access>
												<value>my</value>
												<value>start</value>
											</access>
										</value>
									</not-equal>
								</condition>
								<code>
									<assign-subtract depth="3" id="27">
										<value>
											<access>
												<value>my</value>
												<value>end</value>
											</access>
										</value>
										<value>1</value>
									</assign-subtract>
								</code>
							</if>
						</if-block>
					</code>
				</function>
				<function depth="1" id="28">
					<name>reverse</name>
					<code>
						<assign depth="2" id="29">
							<value>startRev</value>
							<value>
								<access>
									<value>my</value>
									<value>start</value>
								</access>
							</value>
						</assign>
						<assign depth="2" id="30">
							<value>endRev</value>
							<value>
								<subtract>
									<value>
										<access>
											<value>my</value>
											<value>end</value>
										</access>
									</value>
									<value>1</value>
								</subtract>
							</value>
						</assign>
						<while depth="2" id="31">
							<condition>
								<greater>
									<value>
										<subtract>
											<value>endRev</value>
											<value>startRev</value>
										</subtract>
									</value>
									<value>0</value>
								</greater>
							</condition>
							<code>
								<call depth="3" id="32">
									<function>bp_swap</function>
									<parameters>
										<parameter>
											<access>
												<value>startRev</value>
												<value>data</value>
											</access>
										</parameter>
										<parameter>
											<access>
												<value>endRev</value>
												<value>data</value>
											</access>
										</parameter>
									</parameters>
								</call>
								<assign-add depth="3" id="33">
									<value>startRev</value>
									<value>1</value>
								</assign-add>
								<assign-subtract depth="3" id="34">
									<value>endRev</value>
									<value>1</value>
								</assign-subtract>
							</code>
						</while>
					</code>
				</function>
				<operators depth="1" id="35">
					<operator depth="2" id="36">
						<parameters>
							<parameter>index</parameter>
						</parameters>
						<name>[]</name>
						<code>
							<require depth="3" id="37">
								<greater-or-equal depth="4" id="38">
									<value>index</value>
									<value>0</value>
								</greater-or-equal>
								<less depth="4" id="39">
									<value>index</value>
									<value>
										<access>
											<value>my</value>
											<value>length</value>
										</access>
									</value>
								</less>
							</require>
							<return depth="3" id="40">
								<index>
									<value>
										<access>
											<value>my</value>
											<value>start</value>
										</access>
									</value>
									<value>index</value>
								</index>
							</return>
						</code>
					</operator>
					<comment>\SSets\Sthe\Selement\Sat\Sposition\S#index\Sto\S#value</comment>
					<operator depth="2" id="41">
						<parameters>
							<parameter>index</parameter>
							<parameter>value</parameter>
						</parameters>
						<name>[]=</name>
						<code>
							<require depth="3" id="42">
								<greater-or-equal depth="4" id="43">
									<value>index</value>
									<value>0</value>
								</greater-or-equal>
								<less depth="4" id="44">
									<value>index</value>
									<value>
										<access>
											<value>my</value>
											<value>length</value>
										</access>
									</value>
								</less>
							</require>
							<assign depth="3" id="45">
								<value>
									<index>
										<value>
											<access>
												<value>my</value>
												<value>start</value>
											</access>
										</value>
										<value>index</value>
									</index>
								</value>
								<value>value</value>
							</assign>
						</code>
					</operator>
				</operators>
				<iterators depth="1" id="46">
					<iterator-type depth="2" id="47">
						<name>default</name>
						<code>
							<assign depth="3" id="48">
								<value>pos</value>
								<value>0</value>
							</assign>
							<assign depth="3" id="49">
								<value>end</value>
								<value>
									<call>
										<function>
											<access>
												<value>my</value>
												<value>getLength</value>
											</access>
										</function>
										<parameters/>
									</call>
								</value>
							</assign>
							<while depth="3" id="50">
								<condition>
									<less>
										<value>pos</value>
										<value>end</value>
									</less>
								</condition>
								<code>
									<yield depth="4" id="51">
										<index>
											<value>
												<access>
													<value>my</value>
													<value>start</value>
												</access>
											</value>
											<value>pos</value>
										</index>
									</yield>
									<assign-add depth="4" id="52">
										<value>pos</value>
										<value>1</value>
									</assign-add>
								</code>
							</while>
						</code>
					</iterator-type>
				</iterators>
				<get depth="1" id="53">
					<getter depth="2" id="54">
						<name>length</name>
						<code>
							<ensure depth="3" id="55">
								<greater-or-equal depth="4" id="56">
									<value>result</value>
									<value>0</value>
								</greater-or-equal>
							</ensure>
							<return depth="3" id="57">
								<subtract>
									<value>
										<access>
											<value>my</value>
											<value>end</value>
										</access>
									</value>
									<value>
										<access>
											<value>my</value>
											<value>start</value>
										</access>
									</value>
								</subtract>
							</return>
						</code>
					</getter>
					<getter depth="2" id="58">
						<name>size</name>
						<code>
							<ensure depth="3" id="59">
								<greater-or-equal depth="4" id="60">
									<value>result</value>
									<value>0</value>
								</greater-or-equal>
							</ensure>
							<return depth="3" id="61">
								<subtract>
									<value>
										<access>
											<value>my</value>
											<value>endOfStorage</value>
										</access>
									</value>
									<value>
										<access>
											<value>my</value>
											<value>start</value>
										</access>
									</value>
								</subtract>
							</return>
						</code>
					</getter>
					<getter depth="2" id="62">
						<name>data</name>
						<code>
							<return depth="3" id="63">
								<access>
									<value>my</value>
									<value>start</value>
								</access>
							</return>
						</code>
					</getter>
				</get>
				<set depth="1" id="64">
					<setter depth="2" id="65">
						<parameters>
							<parameter>newLength</parameter>
						</parameters>
						<name>length</name>
						<code>
							<require depth="3" id="66">
								<greater-or-equal depth="4" id="67">
									<value>newLength</value>
									<value>0</value>
								</greater-or-equal>
							</require>
							<assign depth="3" id="68">
								<value>
									<access>
										<value>my</value>
										<value>end</value>
									</access>
								</value>
								<value>
									<add>
										<value>
											<access>
												<value>my</value>
												<value>start</value>
											</access>
										</value>
										<value>newLength</value>
									</add>
								</value>
							</assign>
							<if-block depth="3" id="69">
								<if>
									<condition>
										<greater-or-equal>
											<value>
												<access>
													<value>my</value>
													<value>end</value>
												</access>
											</value>
											<value>
												<access>
													<value>my</value>
													<value>endOfStorage</value>
												</access>
											</value>
										</greater-or-equal>
									</condition>
									<code>
										<call depth="4" id="70">
											<function>
												<access>
													<value>my</value>
													<value>reserve</value>
												</access>
											</function>
											<parameters>
												<parameter>
													<multiply>
														<value>
															<call>
																<function>
																	<access>
																		<value>my</value>
																		<value>getLength</value>
																	</access>
																</function>
																<parameters/>
															</call>
														</value>
														<value>4</value>
													</multiply>
												</parameter>
											</parameters>
										</call>
									</code>
								</if>
							</if-block>
						</code>
					</setter>
				</set>
			</code>
			<meta>
				<ensure-destructor-call>true</ensure-destructor-call>
				<force-implementation>false</force-implementation>
				<default-class-version>true</default-class-version>
			</meta>
		</class>
		<comment>\SAdd\Sanother\Sconstructor\Sto\SUTF8String</comment>
		<class depth="0" id="71">
			<name>UTF8String</name>
			<code>
				<comment>\SInit\Sfrom\Sbyte\Sarray</comment>
				<function depth="1" id="72">
					<parameters>
						<parameter>
							<declare-type>
								<value>bytes</value>
								<value>
									<template-call>
										<value>Array</value>
										<value>Byte</value>
									</template-call>
								</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<assign depth="2" id="73">
							<value>
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>Byte</value>
										</template-call>
									</type>
									<parameters>
										<parameter>
											<access>
												<value>bytes</value>
												<value>length</value>
											</access>
										</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<call depth="2" id="74">
							<function>copyMem</function>
							<parameters>
								<parameter>
									<access>
										<value>bytes</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>my</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>bytes</value>
										<value>length</value>
									</access>
								</parameter>
							</parameters>
						</call>
						<assign depth="2" id="75">
							<value>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</value>
							<value>
								<access>
									<value>bytes</value>
									<value>length</value>
								</access>
							</value>
						</assign>
						<assign depth="2" id="76">
							<value>
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</value>
							<value>
								<call>
									<function>bp_strlenUtf8</function>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>data</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</value>
						</assign>
					</code>
				</function>
			</code>
		</class>
	</code>
</module>
