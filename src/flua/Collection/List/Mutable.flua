<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<comment>\SA\Snode\Scontaining\Sthe\Svalue\Sand\Sa\Spointer\Sto\Sthe\Snext\Snode</comment>
		<class depth="0" id="1">
			<name>ListNode</name>
			<code>
				<template depth="1" id="2">
					<parameter depth="2" id="3">TDataType</parameter>
				</template>
				<function depth="1" id="4">
					<name>init</name>
					<code>
						<declare-type depth="2" id="5">
							<value>
								<access>
									<value>my</value>
									<value>value</value>
								</access>
							</value>
							<value>TDataType</value>
						</declare-type>
						<declare-type depth="2" id="6">
							<value>
								<access>
									<value>my</value>
									<value>next</value>
								</access>
							</value>
							<value>
								<template-call>
									<value>ListNode</value>
									<value>TDataType</value>
								</template-call>
							</value>
						</declare-type>
					</code>
					<meta/>
				</function>
				<function depth="1" id="7">
					<parameters>
						<parameter>
							<declare-type>
								<value>
									<access>
										<value>my</value>
										<value>value</value>
									</access>
								</value>
								<value>TDataType</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<noop depth="2" id="8"/>
					</code>
					<meta/>
				</function>
				<get depth="1" id="9">
					<getter depth="2" id="10">
						<name>value</name>
						<code>
							<return depth="3" id="11">
								<access>
									<value>my</value>
									<value>value</value>
								</access>
							</return>
						</code>
						<meta/>
					</getter>
					<getter depth="2" id="12">
						<name>next</name>
						<code>
							<return depth="3" id="13">
								<access>
									<value>my</value>
									<value>next</value>
								</access>
							</return>
						</code>
					</getter>
				</get>
				<set depth="1" id="14">
					<setter depth="2" id="15">
						<parameters>
							<parameter>node</parameter>
						</parameters>
						<name>next</name>
						<code>
							<assign depth="3" id="16">
								<value>
									<access>
										<value>my</value>
										<value>next</value>
									</access>
								</value>
								<value>node</value>
							</assign>
						</code>
						<meta/>
					</setter>
				</set>
			</code>
			<meta>
				<default-class-version>true</default-class-version>
			</meta>
		</class>
		<comment>\SException\Sthrown\Swhen\Sattempting\Sto\Stake\San\Selement\Sfrom\San\Sempty\Slist</comment>
		<class depth="0" id="17">
			<name>NoElementsAvailableException</name>
			<code>
				<extends depth="1" id="18">
					<extends-class depth="2" id="19">Exception</extends-class>
				</extends>
				<function depth="1" id="20">
					<parameters>
						<parameter>
							<access>
								<value>my</value>
								<value>container</value>
							</access>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<noop depth="2" id="21"/>
					</code>
				</function>
				<get depth="1" id="22">
					<getter depth="2" id="23">
						<name>container</name>
						<code>
							<return depth="3" id="24">
								<access>
									<value>my</value>
									<value>container</value>
								</access>
							</return>
						</code>
					</getter>
				</get>
			</code>
		</class>
		<comment>\SSingly\Slinked\Slist</comment>
		<class depth="0" id="25">
			<name>MutableList</name>
			<code>
				<template depth="1" id="26">
					<parameter depth="2" id="27">TDataType</parameter>
				</template>
				<function depth="1" id="28">
					<name>init</name>
					<code>
						<assign depth="2" id="29">
							<value>
								<access>
									<value>my</value>
									<value>end</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>ListNode</value>
											<value>TDataType</value>
										</template-call>
									</type>
									<parameters/>
								</new>
							</value>
						</assign>
						<assign depth="2" id="30">
							<value>
								<access>
									<value>my</value>
									<value>start</value>
								</access>
							</value>
							<value>
								<access>
									<value>my</value>
									<value>end</value>
								</access>
							</value>
						</assign>
					</code>
				</function>
				<comment>\SAdds\San\S#element\Sto\Sthe\Slist</comment>
				<function depth="1" id="31">
					<parameters>
						<parameter>element</parameter>
					</parameters>
					<name>add</name>
					<code>
						<assign depth="2" id="32">
							<value>
								<access>
									<value>
										<access>
											<value>my</value>
											<value>end</value>
										</access>
									</value>
									<value>next</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>ListNode</value>
											<value>TDataType</value>
										</template-call>
									</type>
									<parameters>
										<parameter>element</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<assign depth="2" id="33">
							<value>
								<access>
									<value>my</value>
									<value>end</value>
								</access>
							</value>
							<value>
								<access>
									<value>
										<access>
											<value>my</value>
											<value>end</value>
										</access>
									</value>
									<value>next</value>
								</access>
							</value>
						</assign>
					</code>
				</function>
				<comment>\SRemoves\Sthe\Sfirst\Selement\Sfrom\Sthe\Slist\Sand\Sreturns\Sit</comment>
				<function depth="1" id="34">
					<name>takeFirst</name>
					<code>
						<if-block depth="2" id="35">
							<if>
								<condition>
									<access>
										<value>
											<access>
												<value>my</value>
												<value>start</value>
											</access>
										</value>
										<value>next</value>
									</access>
								</condition>
								<code>
									<assign depth="3" id="36">
										<value>
											<access>
												<value>my</value>
												<value>start</value>
											</access>
										</value>
										<value>
											<access>
												<value>
													<access>
														<value>my</value>
														<value>start</value>
													</access>
												</value>
												<value>next</value>
											</access>
										</value>
									</assign>
									<return depth="3" id="37">
										<access>
											<value>
												<access>
													<value>my</value>
													<value>start</value>
												</access>
											</value>
											<value>value</value>
										</access>
									</return>
								</code>
							</if>
							<else depth="2" id="38">
								<code>
									<throw depth="3" id="39">
										<new>
											<type>NoElementsAvailableException</type>
											<parameters>
												<parameter>my</parameter>
											</parameters>
										</new>
									</throw>
								</code>
							</else>
						</if-block>
					</code>
				</function>
				<get depth="1" id="40">
					<getter depth="2" id="41">
						<name>first</name>
						<code>
							<require depth="3" id="42">
								<not-equal depth="4" id="43">
									<value>
										<access>
											<value>
												<access>
													<value>my</value>
													<value>start</value>
												</access>
											</value>
											<value>next</value>
										</access>
									</value>
									<value>null</value>
								</not-equal>
							</require>
							<return depth="3" id="44">
								<access>
									<value>
										<access>
											<value>my</value>
											<value>start</value>
										</access>
									</value>
									<value>next</value>
								</access>
							</return>
						</code>
					</getter>
					<getter depth="2" id="45">
						<name>hasElements</name>
						<code>
							<return depth="3" id="46">
								<not-equal>
									<value>
										<access>
											<value>
												<access>
													<value>my</value>
													<value>start</value>
												</access>
											</value>
											<value>next</value>
										</access>
									</value>
									<value>null</value>
								</not-equal>
							</return>
						</code>
					</getter>
				</get>
				<iterators depth="1" id="47">
					<iterator-type depth="2" id="48">
						<name>default</name>
						<code>
							<assign depth="3" id="49">
								<value>node</value>
								<value>
									<access>
										<value>my</value>
										<value>start</value>
									</access>
								</value>
							</assign>
							<while depth="3" id="50">
								<condition>
									<access>
										<value>node</value>
										<value>next</value>
									</access>
								</condition>
								<code>
									<assign depth="4" id="51">
										<value>node</value>
										<value>
											<access>
												<value>node</value>
												<value>next</value>
											</access>
										</value>
									</assign>
									<yield depth="4" id="52">
										<access>
											<value>node</value>
											<value>value</value>
										</access>
									</yield>
								</code>
							</while>
						</code>
					</iterator-type>
				</iterators>
			</code>
			<meta/>
		</class>
	</code>
</module>
