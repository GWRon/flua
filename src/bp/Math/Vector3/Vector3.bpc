import bp.Math

class Vector3
	
	init self.x, self.y, self.z
		...
		
	delete
		...
		
	move vector : Vector3
		self += vec
		
	move x, y, z
		self.[x, y, z] += x, y, z
		
	normalise
		self /= self.length
		
	[index]
		switch index
			0
				return self.x
			1
				return self.y
			2
				return self.z
	
	operator
		+= value : Float
			self.[x, y, z] += value
		
		-= value : Float
			self.[x, y, z] -= value
		
		*= value : Float
			self.[x, y, z] *= value
		
		/= value : Float
			self.[x, y, z] /= value
		
		+= vector : Vector3
			self.[x, y, z] += vector.[x, y, z]
		
		-= vector : Vector3
			self.[x, y, z] -= vector.[x, y, z]
	
	get
		length
			return sqr(self.x ^ 2 + self.y ^ 2 + self.z ^ 2)
	
	set
		length newLength
			self.normalise
			self *= newLength

main
	vec = Vector3(1, 2, 3)
	if vec.normalise().length == 1.0
		print "Float test 1 [OK]"
	
	vec = Vector3(1, 2, 3)
	vec = vec.normalise()
	if vec.length == 1.0
		print "Float test 2 [OK]"
	
	vec = Vector3(1, 2, 3)
	vec.normalise
	if vec.length == 1.0
		print "Float test 3 [OK]"
