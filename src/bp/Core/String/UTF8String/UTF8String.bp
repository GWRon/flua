<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
			<import>bp.Core.String</import>
			<import>bp.Core.Memory</import>
		</dependencies>
		<strings>
			<string id="bp_string_0">\n</string>
			<string id="bp_string_1">\n</string>
		</strings>
	</header>
	<code>
		<assign depth="0" id="0">
			<value>EMPTY_STRING</value>
			<value>
				<new>
					<type>UTF8String</type>
					<parameters/>
				</new>
			</value>
		</assign>
		<class depth="0" id="1">
			<name>UTF8String</name>
			<code>
				<comment>\SSubstring\Sfrom\S#index\Sto\S#index\S+\S#length</comment>
				<function depth="1" id="2">
					<parameters>
						<parameter>index</parameter>
						<parameter>length</parameter>
					</parameters>
					<name>mid</name>
					<code>
						<require depth="2" id="3">
							<greater-or-equal depth="3" id="4">
								<value>index</value>
								<value>0</value>
							</greater-or-equal>
							<less depth="3" id="5">
								<value>index</value>
								<value>
									<access>
										<value>my</value>
										<value>length</value>
									</access>
								</value>
							</less>
						</require>
						<if-block depth="2" id="6">
							<if>
								<condition>
									<greater-or-equal>
										<value>length</value>
										<value>0</value>
									</greater-or-equal>
								</condition>
								<code>
									<return depth="3" id="7">
										<new>
											<type>UTF8String</type>
											<parameters>
												<parameter>
													<access>
														<value>my</value>
														<value>data</value>
													</access>
												</parameter>
												<parameter>index</parameter>
												<parameter>length</parameter>
											</parameters>
										</new>
									</return>
								</code>
							</if>
							<else depth="2" id="8">
								<code>
									<return depth="3" id="9">EMPTY_STRING</return>
								</code>
							</else>
						</if-block>
					</code>
					<meta/>
				</function>
				<comment>\SSubstring</comment>
				<function depth="1" id="10">
					<parameters>
						<parameter>from</parameter>
						<parameter>to</parameter>
					</parameters>
					<name>substr</name>
					<code>
						<return depth="2" id="11">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>from</parameter>
									<parameter>
										<subtract>
											<value>to</value>
											<value>from</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</return>
					</code>
				</function>
				<comment>\SReturns\Sthe\Sposition\Sof\Sthe\Sfirst\Soccurence\Sof\S#chars</comment>
				<comment>\Sfrom\Sthe\Sposition\S#fromIndex\Sin\Sthe\Sstring,\S-1\Sif\Snot\Sfound</comment>
				<function depth="1" id="12">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
						<parameter>
							<assign>
								<value>
									<declare-type>
										<value>fromIndex</value>
										<value>Size</value>
									</declare-type>
								</value>
								<value>0</value>
							</assign>
						</parameter>
					</parameters>
					<name>find</name>
					<code>
						<assign depth="2" id="13">
							<value>matchedChars</value>
							<value>0</value>
						</assign>
						<assign depth="2" id="14">
							<value>snapshot</value>
							<value>0</value>
						</assign>
						<assign depth="2" id="15">
							<value>start</value>
							<value>0</value>
						</assign>
						<assign depth="2" id="16">
							<value>count</value>
							<value>fromIndex</value>
						</assign>
						<for depth="2" id="17">
							<iterator>i</iterator>
							<from>0</from>
							<until>
								<call>
									<function>min</function>
									<parameters>
										<parameter>fromIndex</parameter>
										<parameter>
											<access>
												<value>my</value>
												<value>length</value>
											</access>
										</parameter>
									</parameters>
								</call>
							</until>
							<code>
								<assign-add depth="3" id="18">
									<value>start</value>
									<value>
										<call>
											<function>utf8ByteLength</function>
											<parameters>
												<parameter>
													<index>
														<value>
															<access>
																<value>my</value>
																<value>data</value>
															</access>
														</value>
														<value>start</value>
													</index>
												</parameter>
											</parameters>
										</call>
									</value>
								</assign-add>
							</code>
							<meta/>
						</for>
						<comment>\STODO:\SMake\Sit\Swork\Swith\SUnicode\Sstrings</comment>
						<for depth="2" id="19">
							<iterator>i</iterator>
							<from>start</from>
							<until>
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</until>
							<code>
								<if-block depth="3" id="20">
									<if>
										<condition>
											<equal>
												<value>
													<index>
														<value>
															<access>
																<value>my</value>
																<value>data</value>
															</access>
														</value>
														<value>i</value>
													</index>
												</value>
												<value>
													<index>
														<value>
															<access>
																<value>chars</value>
																<value>data</value>
															</access>
														</value>
														<value>matchedChars</value>
													</index>
												</value>
											</equal>
										</condition>
										<code>
											<if-block depth="4" id="21">
												<if>
													<condition>
														<equal>
															<value>matchedChars</value>
															<value>0</value>
														</equal>
													</condition>
													<code>
														<assign depth="5" id="22">
															<value>snapshot</value>
															<value>count</value>
														</assign>
													</code>
												</if>
											</if-block>
											<if-block depth="4" id="23">
												<if>
													<condition>
														<equal>
															<value>matchedChars</value>
															<value>
																<subtract>
																	<value>
																		<access>
																			<value>chars</value>
																			<value>lengthInBytes</value>
																		</access>
																	</value>
																	<value>1</value>
																</subtract>
															</value>
														</equal>
													</condition>
													<code>
														<return depth="5" id="24">snapshot</return>
													</code>
												</if>
											</if-block>
											<assign-add depth="4" id="25">
												<value>matchedChars</value>
												<value>1</value>
											</assign-add>
										</code>
									</if>
									<else depth="3" id="26">
										<code>
											<assign depth="4" id="27">
												<value>matchedChars</value>
												<value>0</value>
											</assign>
										</code>
									</else>
								</if-block>
								<if-block depth="3" id="28">
									<if>
										<condition>
											<call>
												<function>isUTF8StartByte</function>
												<parameters>
													<parameter>
														<index>
															<value>
																<access>
																	<value>my</value>
																	<value>data</value>
																</access>
															</value>
															<value>i</value>
														</index>
													</parameter>
												</parameters>
											</call>
										</condition>
										<code>
											<assign-add depth="4" id="29">
												<value>count</value>
												<value>1</value>
											</assign-add>
										</code>
									</if>
								</if-block>
							</code>
							<meta/>
						</for>
						<return depth="2" id="30">
							<negative>
								<value>1</value>
							</negative>
						</return>
					</code>
					<meta/>
				</function>
				<comment>\SString\Suntil\Sa\Scertain\Sstring\Sappears</comment>
				<function depth="1" id="31">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>until</name>
					<code>
						<assign depth="2" id="32">
							<value>pos</value>
							<value>
								<call>
									<function>
										<access>
											<value>my</value>
											<value>find</value>
										</access>
									</function>
									<parameters>
										<parameter>chars</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<return depth="2" id="33">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>0</parameter>
									<parameter>pos</parameter>
								</parameters>
							</call>
						</return>
					</code>
				</function>
				<comment>\SString\Suntil\Slast\Soccurence\Sof\Sa\Scharacter</comment>
				<function depth="1" id="34">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>untilLast</name>
					<code>
						<noop depth="2" id="35"/>
					</code>
				</function>
				<comment>\SSubstring\Sfrom\Sthe\Spoint\Schars\Sappears</comment>
				<function depth="1" id="36">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>from</name>
					<code>
						<assign depth="2" id="37">
							<value>pos</value>
							<value>
								<call>
									<function>
										<access>
											<value>my</value>
											<value>find</value>
										</access>
									</function>
									<parameters>
										<parameter>chars</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<return depth="2" id="38">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>pos</parameter>
									<parameter>
										<subtract>
											<value>
												<access>
													<value>my</value>
													<value>length</value>
												</access>
											</value>
											<value>pos</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</return>
					</code>
				</function>
				<comment>\SSubstring\Sfrom\Sthe\Slast\Soccurence\Sof\Schars</comment>
				<function depth="1" id="39">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>fromLast</name>
					<code>
						<noop depth="2" id="40"/>
					</code>
				</function>
				<comment>\SSubstring\Safter\Sthe\Sfirst\Soccurence\Sof\Schars</comment>
				<function depth="1" id="41">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>after</name>
					<code>
						<assign depth="2" id="42">
							<value>pos</value>
							<value>
								<call>
									<function>
										<access>
											<value>my</value>
											<value>find</value>
										</access>
									</function>
									<parameters>
										<parameter>chars</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<if-block depth="2" id="43">
							<if>
								<condition>
									<not-equal>
										<value>pos</value>
										<value>
											<negative>
												<value>1</value>
											</negative>
										</value>
									</not-equal>
								</condition>
								<code>
									<return depth="3" id="44">
										<call>
											<function>
												<access>
													<value>my</value>
													<value>mid</value>
												</access>
											</function>
											<parameters>
												<parameter>
													<add>
														<value>pos</value>
														<value>
															<access>
																<value>chars</value>
																<value>length</value>
															</access>
														</value>
													</add>
												</parameter>
												<parameter>
													<subtract>
														<value>
															<access>
																<value>my</value>
																<value>length</value>
															</access>
														</value>
														<value>pos</value>
													</subtract>
												</parameter>
											</parameters>
										</call>
									</return>
								</code>
							</if>
							<else depth="2" id="45">
								<code>
									<return depth="3" id="46">EMPTY_STRING</return>
								</code>
							</else>
						</if-block>
					</code>
				</function>
				<comment>\SLeft\S#length\Scharacters</comment>
				<function depth="1" id="47">
					<parameters>
						<parameter>length</parameter>
					</parameters>
					<name>left</name>
					<code>
						<return depth="2" id="48">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>0</parameter>
									<parameter>length</parameter>
								</parameters>
							</call>
						</return>
					</code>
				</function>
				<comment>\SRight\S#length\Scharacters</comment>
				<function depth="1" id="49">
					<parameters>
						<parameter>length</parameter>
					</parameters>
					<name>right</name>
					<code>
						<return depth="2" id="50">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>
										<subtract>
											<value>
												<access>
													<value>my</value>
													<value>length</value>
												</access>
											</value>
											<value>length</value>
										</subtract>
									</parameter>
									<parameter>length</parameter>
								</parameters>
							</call>
						</return>
					</code>
				</function>
				<comment>\STODO:\SDelete\Scertain\Scharacters\Sfrom\Sa\Sstring</comment>
				<function depth="1" id="51">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>erase</name>
					<code>
						<assign depth="2" id="52">
							<value>pos</value>
							<value>
								<call>
									<function>
										<access>
											<value>my</value>
											<value>find</value>
										</access>
									</function>
									<parameters>
										<parameter>chars</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<return depth="2" id="53">
							<new>
								<type>UTF8String</type>
								<parameters/>
							</new>
						</return>
					</code>
				</function>
				<function depth="1" id="54">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>eraseAll</name>
					<code>
						<noop depth="2" id="55"/>
					</code>
				</function>
				<function depth="1" id="56">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>eraseLast</name>
					<code>
						<noop depth="2" id="57"/>
					</code>
				</function>
				<comment>\SDelete\S#characterCount\Scharacters\Sfrom\Sthe\Sstring</comment>
				<function depth="1" id="58">
					<parameters>
						<parameter>
							<declare-type>
								<value>characterCount</value>
								<value>Size</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>eraseLeft</name>
					<code>
						<return depth="2" id="59">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>characterCount</parameter>
									<parameter>
										<subtract>
											<value>
												<access>
													<value>my</value>
													<value>length</value>
												</access>
											</value>
											<value>characterCount</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</return>
					</code>
				</function>
				<comment>\SDelete\S#chars\Sfrom\Sthe\Sstring\Sif\Sthe\Sstring\Sstarts\Swith\Schars</comment>
				<function depth="1" id="60">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>eraseLeft</name>
					<code>
						<if-block depth="2" id="61">
							<if>
								<condition>
									<call>
										<function>
											<access>
												<value>my</value>
												<value>startsWith</value>
											</access>
										</function>
										<parameters>
											<parameter>chars</parameter>
										</parameters>
									</call>
								</condition>
								<code>
									<return depth="3" id="62">
										<call>
											<function>
												<access>
													<value>my</value>
													<value>eraseLeft</value>
												</access>
											</function>
											<parameters>
												<parameter>
													<access>
														<value>chars</value>
														<value>length</value>
													</access>
												</parameter>
											</parameters>
										</call>
									</return>
								</code>
							</if>
							<else depth="2" id="63">
								<code>
									<return depth="3" id="64">my</return>
								</code>
							</else>
						</if-block>
					</code>
				</function>
				<comment>\SDelete\S#characterCount\Scharacters\Sfrom\Sthe\Sstring\Sat\Sthe\Send</comment>
				<function depth="1" id="65">
					<parameters>
						<parameter>
							<declare-type>
								<value>characterCount</value>
								<value>Size</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>eraseRight</name>
					<code>
						<return depth="2" id="66">
							<call>
								<function>
									<access>
										<value>my</value>
										<value>mid</value>
									</access>
								</function>
								<parameters>
									<parameter>0</parameter>
									<parameter>
										<subtract>
											<value>
												<access>
													<value>my</value>
													<value>length</value>
												</access>
											</value>
											<value>characterCount</value>
										</subtract>
									</parameter>
								</parameters>
							</call>
						</return>
					</code>
				</function>
				<comment>\SDelete\S#chars\Sfrom\Sthe\Sstring\Sif\Sthe\Sstringe\Sends\Swith\S#chars</comment>
				<function depth="1" id="67">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>eraseRight</name>
					<code>
						<if-block depth="2" id="68">
							<if>
								<condition>
									<call>
										<function>
											<access>
												<value>my</value>
												<value>endsWith</value>
											</access>
										</function>
										<parameters>
											<parameter>chars</parameter>
										</parameters>
									</call>
								</condition>
								<code>
									<return depth="3" id="69">
										<call>
											<function>
												<access>
													<value>my</value>
													<value>eraseRight</value>
												</access>
											</function>
											<parameters>
												<parameter>
													<access>
														<value>chars</value>
														<value>length</value>
													</access>
												</parameter>
											</parameters>
										</call>
									</return>
								</code>
							</if>
							<else depth="2" id="70">
								<code>
									<return depth="3" id="71">my</return>
								</code>
							</else>
						</if-block>
					</code>
				</function>
				<comment>\SReturns\Swhether\Sthe\Sstring\Sstarts\Swith\S#chars</comment>
				<function depth="1" id="72">
					<parameters>
						<parameter>chars</parameter>
					</parameters>
					<name>startsWith</name>
					<code>
						<return depth="2" id="73">
							<call>
								<function>compareMem</function>
								<parameters>
									<parameter>
										<access>
											<value>my</value>
											<value>data</value>
										</access>
									</parameter>
									<parameter>
										<access>
											<value>chars</value>
											<value>data</value>
										</access>
									</parameter>
									<parameter>
										<access>
											<value>chars</value>
											<value>lengthInBytes</value>
										</access>
									</parameter>
								</parameters>
							</call>
						</return>
					</code>
				</function>
				<comment>\SReturns\Swhether\Sthe\Sstring\Sends\Swith\S#chars</comment>
				<function depth="1" id="74">
					<parameters>
						<parameter>chars</parameter>
					</parameters>
					<name>endsWith</name>
					<code>
						<return depth="2" id="75">
							<call>
								<function>compareMem</function>
								<parameters>
									<parameter>
										<subtract>
											<value>
												<add>
													<value>
														<access>
															<value>my</value>
															<value>data</value>
														</access>
													</value>
													<value>
														<access>
															<value>my</value>
															<value>lengthInBytes</value>
														</access>
													</value>
												</add>
											</value>
											<value>
												<access>
													<value>chars</value>
													<value>lengthInBytes</value>
												</access>
											</value>
										</subtract>
									</parameter>
									<parameter>
										<access>
											<value>chars</value>
											<value>data</value>
										</access>
									</parameter>
									<parameter>
										<access>
											<value>chars</value>
											<value>lengthInBytes</value>
										</access>
									</parameter>
								</parameters>
							</call>
						</return>
					</code>
				</function>
				<function depth="1" id="76">
					<parameters>
						<parameter>
							<declare-type>
								<value>chars</value>
								<value>UTF8String</value>
							</declare-type>
						</parameter>
					</parameters>
					<name>contains</name>
					<code>
						<return depth="2" id="77">
							<not-equal>
								<value>
									<call>
										<function>
											<access>
												<value>my</value>
												<value>find</value>
											</access>
										</function>
										<parameters>
											<parameter>chars</parameter>
										</parameters>
									</call>
								</value>
								<value>
									<negative>
										<value>1</value>
									</negative>
								</value>
							</not-equal>
						</return>
					</code>
				</function>
				<comment>\SPrints\Sthe\Sstring\Son\Sthe\Sconsole</comment>
				<function depth="1" id="78">
					<name>print</name>
					<code>
						<call depth="2" id="79">
							<function>bp_writeXbytes</function>
							<parameters>
								<parameter>
									<access>
										<value>my</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>my</value>
										<value>lengthInBytes</value>
									</access>
								</parameter>
							</parameters>
						</call>
						<call depth="2" id="80">
							<function>bp_write</function>
							<parameters>
								<parameter>bp_string_0</parameter>
							</parameters>
						</call>
						<call depth="2" id="81">
							<function>bp_flush</function>
							<parameters/>
						</call>
					</code>
				</function>
				<comment>\SWrites\Sthe\Sstring\Son\Sthe\Sconsole\Swithout\Sa\Snewline\Scharacter</comment>
				<function depth="1" id="82">
					<name>write</name>
					<code>
						<call depth="2" id="83">
							<function>bp_writebytes</function>
							<parameters>
								<parameter>
									<access>
										<value>my</value>
										<value>data</value>
									</access>
								</parameter>
								<parameter>
									<access>
										<value>my</value>
										<value>lengthInBytes</value>
									</access>
								</parameter>
							</parameters>
						</call>
						<call depth="2" id="84">
							<function>bp_flush</function>
							<parameters/>
						</call>
					</code>
				</function>
				<iterators depth="1" id="85">
					<iterator-type depth="2" id="86">
						<name>lines</name>
						<code>
							<assign depth="3" id="87">
								<value>pos</value>
								<value>0</value>
							</assign>
							<while depth="3" id="88">
								<condition>1</condition>
								<code>
									<assign depth="4" id="89">
										<value>pos</value>
										<value>
											<call>
												<function>
													<access>
														<value>my</value>
														<value>find</value>
													</access>
												</function>
												<parameters>
													<parameter>bp_string_1</parameter>
												</parameters>
											</call>
										</value>
									</assign>
								</code>
							</while>
						</code>
					</iterator-type>
				</iterators>
				<get depth="1" id="90">
					<getter depth="2" id="91">
						<name>data</name>
						<code>
							<return depth="3" id="92">
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</return>
						</code>
					</getter>
					<getter depth="2" id="93">
						<name>length</name>
						<code>
							<ensure depth="3" id="94">
								<greater-or-equal depth="4" id="95">
									<value>result</value>
									<value>0</value>
								</greater-or-equal>
							</ensure>
							<return depth="3" id="96">
								<access>
									<value>my</value>
									<value>length</value>
								</access>
							</return>
						</code>
					</getter>
					<getter depth="2" id="97">
						<name>lengthInBytes</name>
						<code>
							<ensure depth="3" id="98">
								<greater-or-equal depth="4" id="99">
									<value>result</value>
									<value>0</value>
								</greater-or-equal>
							</ensure>
							<return depth="3" id="100">
								<access>
									<value>my</value>
									<value>lengthInBytes</value>
								</access>
							</return>
						</code>
					</getter>
				</get>
				<casts depth="1" id="101">
					<cast-definition depth="2" id="102">
						<to>
							<unmanaged>
								<value>
									<template-call>
										<value>MemPointer</value>
										<value>ConstChar</value>
									</template-call>
								</value>
							</unmanaged>
						</to>
						<code>
							<return depth="3" id="103">
								<access>
									<value>my</value>
									<value>data</value>
								</access>
							</return>
						</code>
					</cast-definition>
				</casts>
			</code>
			<meta>
				<force-implementation>false</force-implementation>
			</meta>
		</class>
		<comment>\SExtend\Svirtual\SInt\Sclass\Sby\San\Soperator</comment>
		<class depth="0" id="104">
			<name>Int</name>
			<code>
				<operators depth="1" id="105">
					<operator depth="2" id="106">
						<parameters>
							<parameter>
								<declare-type>
									<value>stri</value>
									<value>UTF8String</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>+</name>
						<code>
							<return depth="3" id="107">
								<new>
									<type>UTF8String</type>
									<parameters>
										<parameter>my</parameter>
										<parameter>stri</parameter>
									</parameters>
								</new>
							</return>
						</code>
					</operator>
				</operators>
			</code>
			<meta/>
		</class>
		<comment>\SReturns\Sthe\Slength\Sthe\S#startByte\Sis\Sindicating</comment>
		<function depth="0" id="108">
			<parameters>
				<parameter>
					<declare-type>
						<value>startByte</value>
						<value>Byte</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>utf8ByteLength</name>
			<code>
				<if-block depth="1" id="109">
					<if>
						<condition>
							<equal>
								<value>
									<bitwise-and>
										<value>startByte</value>
										<value>0x80</value>
									</bitwise-and>
								</value>
								<value>0</value>
							</equal>
						</condition>
						<code>
							<return depth="2" id="110">1</return>
						</code>
					</if>
					<else-if depth="1" id="111">
						<condition>
							<equal>
								<value>
									<bitwise-and>
										<value>startByte</value>
										<value>0xE0</value>
									</bitwise-and>
								</value>
								<value>0xC0</value>
							</equal>
						</condition>
						<code>
							<return depth="2" id="112">2</return>
						</code>
					</else-if>
					<else-if depth="1" id="113">
						<condition>
							<equal>
								<value>
									<bitwise-and>
										<value>startByte</value>
										<value>0xF0</value>
									</bitwise-and>
								</value>
								<value>0xE0</value>
							</equal>
						</condition>
						<code>
							<return depth="2" id="114">3</return>
						</code>
					</else-if>
					<else-if depth="1" id="115">
						<condition>
							<equal>
								<value>
									<bitwise-and>
										<value>startByte</value>
										<value>0xF8</value>
									</bitwise-and>
								</value>
								<value>0xF0</value>
							</equal>
						</condition>
						<code>
							<return depth="2" id="116">4</return>
						</code>
					</else-if>
				</if-block>
				<return depth="1" id="117">0</return>
			</code>
			<meta/>
		</function>
		<comment>\SReturns\Swhether\S#byte\Sindicates\Sthe\Sbeginning\Sof\Sa\SUTF-8\Scharacter\Ssequence</comment>
		<function depth="0" id="118">
			<parameters>
				<parameter>
					<declare-type>
						<value>byte</value>
						<value>Byte</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>isUTF8StartByte</name>
			<code>
				<return depth="1" id="119">
					<not-equal>
						<value>
							<bitwise-and>
								<value>byte</value>
								<value>0xC0</value>
							</bitwise-and>
						</value>
						<value>0x80</value>
					</not-equal>
				</return>
			</code>
		</function>
		<comment>\SPrints\Sa\SUTF-8\Sencoded\Sstring\Son\Sthe\Sconsole</comment>
		<function depth="0" id="120">
			<parameters>
				<parameter>
					<declare-type>
						<value>stri</value>
						<value>UTF8String</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>print</name>
			<code>
				<call depth="1" id="121">
					<function>
						<access>
							<value>stri</value>
							<value>print</value>
						</access>
					</function>
					<parameters/>
				</call>
			</code>
		</function>
	</code>
</module>
