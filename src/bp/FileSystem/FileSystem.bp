<module>
	<header>
		<title/>
		<dependencies>
			<import>bp.Core</import>
			<import>File</import>
			<import>FileReadStream</import>
			<import>FileWriteStream</import>
		</dependencies>
		<strings>
			<string id="bp_string_0">test.txt</string>
		</strings>
	</header>
	<code>
		<target depth="0">
			<name>C++</name>
			<code>
				<include depth="1">FileSystem.hpp</include>
			</code>
		</target>
		<extern depth="0">
			<extern-function depth="1">
				<name>bp_fileModificationTime</name>
				<type>Int64</type>
				<meta>
					<no-side-effects>true</no-side-effects>
				</meta>
			</extern-function>
			<extern-function depth="1">
				<name>bp_getCurrentDir</name>
				<type>String</type>
				<meta>
					<no-side-effects>true</no-side-effects>
				</meta>
			</extern-function>
			<extern-function depth="1">
				<name>bp_fileExists</name>
				<type>Bool</type>
				<meta>
					<no-side-effects>true</no-side-effects>
				</meta>
			</extern-function>
			<extern-function depth="1">
				<name>bp_fileSize</name>
				<type>Size</type>
				<meta>
					<no-side-effects>true</no-side-effects>
				</meta>
			</extern-function>
			<extern-function depth="1">
				<name>bp_deleteFile</name>
				<type>Bool</type>
				<meta/>
			</extern-function>
			<extern-function depth="1">
				<name>bp_renameFile</name>
				<type>Bool</type>
				<meta/>
			</extern-function>
			<extern-function depth="1">
				<name>bp_fopen</name>
				<type>FileHandle</type>
				<meta/>
			</extern-function>
			<extern-function depth="1">
				<name>bp_fwrite</name>
				<type>Size</type>
				<meta/>
			</extern-function>
			<extern-function depth="1">
				<name>bp_fread</name>
				<type>Size</type>
				<meta/>
			</extern-function>
			<extern-function depth="1">
				<name>bp_fclose</name>
				<type>Bool</type>
				<meta/>
			</extern-function>
			<extern-function depth="1">
				<name>bp_fflush</name>
				<type>Bool</type>
				<meta/>
			</extern-function>
			<extern-function depth="1">
				<name>bp_readLine</name>
				<type>String</type>
				<meta/>
			</extern-function>
			<extern-function depth="1">
				<name>bp_changeDir</name>
				<meta/>
			</extern-function>
			<class depth="1">
				<name>FileHandle</name>
				<code>
					<function depth="2">
						<name>init</name>
						<code>
							<noop depth="3"/>
						</code>
						<meta/>
					</function>
				</code>
				<meta/>
			</class>
		</extern>
		<function depth="0">
			<name>getCurrentDir</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_getCurrentDir</function>
						<parameters/>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<function depth="0">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>changeDir</name>
			<code>
				<call depth="1">
					<function>bp_changeDir</function>
					<parameters>
						<parameter>path</parameter>
					</parameters>
				</call>
			</code>
		</function>
		<function depth="0">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>deleteFile</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_deleteFile</function>
						<parameters>
							<parameter>path</parameter>
						</parameters>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<function depth="0">
			<parameters>
				<parameter>from</parameter>
				<parameter>to</parameter>
			</parameters>
			<name>renameFile</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_renameFile</function>
						<parameters>
							<parameter>from</parameter>
							<parameter>to</parameter>
						</parameters>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<function depth="0">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>fileExists</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_fileExists</function>
						<parameters>
							<parameter>path</parameter>
						</parameters>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<function depth="0">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>fileSize</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_fileSize</function>
						<parameters>
							<parameter>path</parameter>
						</parameters>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<function depth="0">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>fileModificationTime</name>
			<code>
				<return depth="1">
					<call>
						<function>bp_fileModificationTime</function>
						<parameters>
							<parameter>path</parameter>
						</parameters>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<function depth="0">
			<parameters>
				<parameter>path</parameter>
			</parameters>
			<name>readFile</name>
			<code>
				<comment>\STODO:\S'in'\Ssyntax</comment>
				<assign depth="1">
					<value>f</value>
					<value>
						<new>
							<type>FileReadStream</type>
							<parameters>
								<parameter>path</parameter>
							</parameters>
						</new>
					</value>
				</assign>
				<assign depth="1">
					<value>data</value>
					<value>
						<call>
							<function>
								<access>
									<value>f</value>
									<value>read</value>
								</access>
							</function>
							<parameters/>
						</call>
					</value>
				</assign>
				<call depth="1">
					<function>
						<access>
							<value>f</value>
							<value>close</value>
						</access>
					</function>
					<parameters/>
				</call>
				<return depth="1">data</return>
			</code>
			<meta/>
		</function>
		<function depth="0">
			<parameters>
				<parameter>path</parameter>
				<parameter>data</parameter>
			</parameters>
			<name>writeFile</name>
			<code>
				<comment>\STODO:\S'in'\Ssyntax</comment>
				<assign depth="1">
					<value>f</value>
					<value>
						<new>
							<type>FileWriteStream</type>
							<parameters>
								<parameter>path</parameter>
							</parameters>
						</new>
					</value>
				</assign>
				<call depth="1">
					<function>
						<access>
							<value>f</value>
							<value>write</value>
						</access>
					</function>
					<parameters>
						<parameter>data</parameter>
					</parameters>
				</call>
				<call depth="1">
					<function>
						<access>
							<value>f</value>
							<value>close</value>
						</access>
					</function>
					<parameters/>
				</call>
			</code>
			<meta/>
		</function>
		<comment>\SUsage\Sexample\S(not\Sworking\Syet)</comment>
		<test depth="0">
			<assign depth="1">
				<value>a</value>
				<value>
					<new>
						<type>FileReadStream</type>
						<parameters>
							<parameter>bp_string_0</parameter>
						</parameters>
					</new>
				</value>
			</assign>
			<while depth="1">
				<condition>
					<assign>
						<value>line</value>
						<value>
							<call>
								<function>
									<access>
										<value>a</value>
										<value>readLine</value>
									</access>
								</function>
								<parameters/>
							</call>
						</value>
					</assign>
				</condition>
				<code>
					<call depth="2">
						<function>print</function>
						<parameters>
							<parameter>line</parameter>
						</parameters>
					</call>
				</code>
			</while>
			<call depth="1">
				<function>
					<access>
						<value>a</value>
						<value>close</value>
					</access>
				</function>
				<parameters/>
			</call>
		</test>
	</code>
</module>
