<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
		</dependencies>
		<strings/>
	</header>
	<code>
		<target depth="0" id="1">
			<name>C++</name>
			<code>
				<include depth="1" id="2">Hash.hpp</include>
			</code>
		</target>
		<extern depth="0" id="3">
			<namespace depth="1" id="4">
				<name>flua</name>
				<code>
					<extern-function depth="2" id="5">
						<name>hash</name>
						<type>Int32</type>
						<meta>
							<no-side-effects>true</no-side-effects>
							<same-output-for-input>true</same-output-for-input>
						</meta>
					</extern-function>
				</code>
			</namespace>
		</extern>
		<const depth="0" id="6">
			<comment>\SNeeds\Sto\Sbe\San\Sodd\Snumber,\Spreferably\Sa\Sprime\Snumber\S(1,\S3,\S5,\S7,\S...)</comment>
			<assign depth="1" id="7">
				<value>DEFAULT_STEP_SIZE</value>
				<value>1</value>
			</assign>
		</const>
		<comment>\SReturns\Sthe\Shashcode\Sfor\S#x</comment>
		<function depth="0" id="8">
			<parameters>
				<parameter>x</parameter>
			</parameters>
			<name>hashCode</name>
			<code>
				<return depth="1" id="9">
					<call>
						<function>
							<access>
								<value>flua</value>
								<value>hash</value>
							</access>
						</function>
						<parameters>
							<parameter>x</parameter>
						</parameters>
					</call>
				</return>
			</code>
			<meta/>
		</function>
		<comment>\SHash\Smap\S/\SHash\Stable\Simplementation\Susing\Slinear\Sprobing,\Sno\Schaining.</comment>
		<comment>\SNote\Sthat\Screating\Sit\S/\Sadding\Selements\Sfor\Shuge\Ssizes\S(&gt;1000000\Selements)</comment>
		<comment>\Sis\Srelatively\Sslow\Sbut\Slookup\Sspeed\Sis\Squite\Sgood.</comment>
		<comment>\STODO:\SUse\Sa\Sdifferent\Salgorithm.</comment>
		<class depth="0" id="10">
			<name>MutableMap</name>
			<code>
				<template depth="1" id="11">
					<parameter depth="2" id="12">TKey</parameter>
					<parameter depth="2" id="13">TValue</parameter>
				</template>
				<function depth="1" id="14">
					<parameters>
						<parameter>
							<assign>
								<value>
									<declare-type>
										<value>size</value>
										<value>Size</value>
									</declare-type>
								</value>
								<value>1024</value>
							</assign>
						</parameter>
					</parameters>
					<name>init</name>
					<code>
						<assign depth="2" id="15">
							<value>
								<access>
									<value>my</value>
									<value>size</value>
								</access>
							</value>
							<value>
								<call>
									<function>getNextPowerOf2</function>
									<parameters>
										<parameter>size</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<assign depth="2" id="16">
							<value>
								<access>
									<value>my</value>
									<value>table</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>TValue</value>
										</template-call>
									</type>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>size</value>
											</access>
										</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<assign depth="2" id="17">
							<value>
								<access>
									<value>my</value>
									<value>hashes</value>
								</access>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>Int</value>
										</template-call>
									</type>
									<parameters>
										<parameter>
											<access>
												<value>my</value>
												<value>size</value>
											</access>
										</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<assign depth="2" id="18">
							<value>
								<access>
									<value>my</value>
									<value>mask</value>
								</access>
							</value>
							<value>
								<subtract>
									<value>
										<access>
											<value>my</value>
											<value>size</value>
										</access>
									</value>
									<value>1</value>
								</subtract>
							</value>
						</assign>
					</code>
				</function>
				<comment>\SReserves\Sspace\Sfor\S#newSize\Selements.\S#newSize\Sis\Srequired\Sto\Sbe\Sa\Spower\Sof\S2!</comment>
				<function depth="1" id="19">
					<parameters>
						<parameter>newSize</parameter>
					</parameters>
					<name>reserve</name>
					<code>
						<assign depth="2" id="20">
							<value>newTable</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>TValue</value>
										</template-call>
									</type>
									<parameters>
										<parameter>newSize</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<assign depth="2" id="21">
							<value>newHashes</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>MemPointer</value>
											<value>Int</value>
										</template-call>
									</type>
									<parameters>
										<parameter>newSize</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<assign depth="2" id="22">
							<value>newMask</value>
							<value>
								<subtract>
									<value>newSize</value>
									<value>1</value>
								</subtract>
							</value>
						</assign>
						<for depth="2" id="23">
							<iterator>i</iterator>
							<from>0</from>
							<until>
								<access>
									<value>my</value>
									<value>size</value>
								</access>
							</until>
							<code>
								<assign depth="3" id="24">
									<value>savedHash</value>
									<value>
										<index>
											<value>
												<access>
													<value>my</value>
													<value>hashes</value>
												</access>
											</value>
											<value>i</value>
										</index>
									</value>
								</assign>
								<if-block depth="3" id="25">
									<if>
										<condition>
											<not-equal>
												<value>savedHash</value>
												<value>0</value>
											</not-equal>
										</condition>
										<code>
											<assign depth="4" id="26">
												<value>newPos</value>
												<value>
													<bitwise-and>
														<value>savedHash</value>
														<value>newMask</value>
													</bitwise-and>
												</value>
											</assign>
											<comment>\SWe\Sneed\Sto\Shandle\Scollisions\Shere\Sas\Swell!</comment>
											<while depth="4" id="27">
												<condition>
													<not-equal>
														<value>
															<index>
																<value>newHashes</value>
																<value>newPos</value>
															</index>
														</value>
														<value>0</value>
													</not-equal>
												</condition>
												<code>
													<assign depth="5" id="28">
														<value>newPos</value>
														<value>
															<bitwise-and>
																<value>
																	<add>
																		<value>newPos</value>
																		<value>DEFAULT_STEP_SIZE</value>
																	</add>
																</value>
																<value>newMask</value>
															</bitwise-and>
														</value>
													</assign>
												</code>
											</while>
											<comment>\SCopy\Sfrom\Sold\Stable\Sat\Spos\Si\Sto\Snew\Stable\Sat\Sposition\SnewPos</comment>
											<assign depth="4" id="29">
												<value>
													<index>
														<value>newHashes</value>
														<value>newPos</value>
													</index>
												</value>
												<value>savedHash</value>
											</assign>
											<assign depth="4" id="30">
												<value>
													<index>
														<value>newTable</value>
														<value>newPos</value>
													</index>
												</value>
												<value>
													<index>
														<value>
															<access>
																<value>my</value>
																<value>table</value>
															</access>
														</value>
														<value>i</value>
													</index>
												</value>
											</assign>
										</code>
									</if>
								</if-block>
							</code>
						</for>
						<assign depth="2" id="31">
							<value>
								<access>
									<value>my</value>
									<value>size</value>
								</access>
							</value>
							<value>newSize</value>
						</assign>
						<assign depth="2" id="32">
							<value>
								<access>
									<value>my</value>
									<value>table</value>
								</access>
							</value>
							<value>newTable</value>
						</assign>
						<assign depth="2" id="33">
							<value>
								<access>
									<value>my</value>
									<value>hashes</value>
								</access>
							</value>
							<value>newHashes</value>
						</assign>
						<assign depth="2" id="34">
							<value>
								<access>
									<value>my</value>
									<value>mask</value>
								</access>
							</value>
							<value>newMask</value>
						</assign>
					</code>
				</function>
				<get depth="1" id="35">
					<getter depth="2" id="36">
						<name>size</name>
						<code>
							<return depth="3" id="37">
								<access>
									<value>my</value>
									<value>size</value>
								</access>
							</return>
						</code>
					</getter>
				</get>
				<operators depth="1" id="38">
					<comment>\SRetrieves\Sthe\Ssaved\Svalue\Sfor\S#key\Sfrom\Sthe\Shash\Smap</comment>
					<operator depth="2" id="39">
						<parameters>
							<parameter>
								<declare-type>
									<value>key</value>
									<value>TKey</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>[]</name>
						<code>
							<assign depth="3" id="40">
								<value>hash</value>
								<value>
									<call>
										<function>hashCode</function>
										<parameters>
											<parameter>key</parameter>
										</parameters>
									</call>
								</value>
							</assign>
							<assign depth="3" id="41">
								<value>pos</value>
								<value>
									<bitwise-and>
										<value>hash</value>
										<value>
											<access>
												<value>my</value>
												<value>mask</value>
											</access>
										</value>
									</bitwise-and>
								</value>
							</assign>
							<assign depth="3" id="42">
								<value>storedHash</value>
								<value>
									<index>
										<value>
											<access>
												<value>my</value>
												<value>hashes</value>
											</access>
										</value>
										<value>pos</value>
									</index>
								</value>
							</assign>
							<while depth="3" id="43">
								<condition>1</condition>
								<code>
									<if-block depth="4" id="44">
										<if>
											<condition>
												<equal>
													<value>storedHash</value>
													<value>hash</value>
												</equal>
											</condition>
											<code>
												<comment>\SLookup</comment>
												<return depth="5" id="45">
													<index>
														<value>
															<access>
																<value>my</value>
																<value>table</value>
															</access>
														</value>
														<value>pos</value>
													</index>
												</return>
											</code>
										</if>
										<else-if depth="4" id="46">
											<condition>
												<equal>
													<value>storedHash</value>
													<value>0</value>
												</equal>
											</condition>
											<code>
												<comment>\SCould\Snot\Sfind\Sthe\Skey</comment>
												<throw depth="5" id="47">
													<new>
														<type>KeyNotFoundException</type>
														<parameters>
															<parameter>key</parameter>
														</parameters>
													</new>
												</throw>
											</code>
										</else-if>
										<else depth="4" id="48">
											<code>
												<assign depth="5" id="49">
													<value>pos</value>
													<value>
														<bitwise-and>
															<value>
																<add>
																	<value>pos</value>
																	<value>DEFAULT_STEP_SIZE</value>
																</add>
															</value>
															<value>
																<access>
																	<value>my</value>
																	<value>mask</value>
																</access>
															</value>
														</bitwise-and>
													</value>
												</assign>
												<assign depth="5" id="50">
													<value>storedHash</value>
													<value>
														<index>
															<value>
																<access>
																	<value>my</value>
																	<value>hashes</value>
																</access>
															</value>
															<value>pos</value>
														</index>
													</value>
												</assign>
												<continue depth="5" id="51"/>
											</code>
										</else>
									</if-block>
								</code>
							</while>
						</code>
					</operator>
					<comment>\SCreates\Sa\Snew\S#key\S→\S#value\Spair\Sor\Ssets\Sthe\S#value\Sof\San\Sexisting\S#key</comment>
					<operator depth="2" id="52">
						<parameters>
							<parameter>
								<declare-type>
									<value>key</value>
									<value>TKey</value>
								</declare-type>
							</parameter>
							<parameter>
								<declare-type>
									<value>value</value>
									<value>TValue</value>
								</declare-type>
							</parameter>
						</parameters>
						<name>[]=</name>
						<code>
							<assign depth="3" id="53">
								<value>hash</value>
								<value>
									<call>
										<function>hashCode</function>
										<parameters>
											<parameter>key</parameter>
										</parameters>
									</call>
								</value>
							</assign>
							<assign depth="3" id="54">
								<value>pos</value>
								<value>
									<bitwise-and>
										<value>hash</value>
										<value>
											<access>
												<value>my</value>
												<value>mask</value>
											</access>
										</value>
									</bitwise-and>
								</value>
							</assign>
							<assign depth="3" id="55">
								<value>storedHash</value>
								<value>
									<index>
										<value>
											<access>
												<value>my</value>
												<value>hashes</value>
											</access>
										</value>
										<value>pos</value>
									</index>
								</value>
							</assign>
							<assign depth="3" id="56">
								<value>collisions</value>
								<value>0</value>
							</assign>
							<while depth="3" id="57">
								<condition>1</condition>
								<code>
									<if-block depth="4" id="58">
										<if>
											<condition>
												<equal>
													<value>storedHash</value>
													<value>hash</value>
												</equal>
											</condition>
											<code>
												<comment>\SOverwrite\Sold</comment>
												<assign depth="5" id="59">
													<value>
														<index>
															<value>
																<access>
																	<value>my</value>
																	<value>table</value>
																</access>
															</value>
															<value>pos</value>
														</index>
													</value>
													<value>value</value>
												</assign>
												<return depth="5" id="60"/>
											</code>
										</if>
										<else-if depth="4" id="61">
											<condition>
												<equal>
													<value>storedHash</value>
													<value>0</value>
												</equal>
											</condition>
											<code>
												<comment>\SStore\Swithout\Scollision</comment>
												<assign depth="5" id="62">
													<value>
														<index>
															<value>
																<access>
																	<value>my</value>
																	<value>hashes</value>
																</access>
															</value>
															<value>pos</value>
														</index>
													</value>
													<value>hash</value>
												</assign>
												<assign depth="5" id="63">
													<value>
														<index>
															<value>
																<access>
																	<value>my</value>
																	<value>table</value>
																</access>
															</value>
															<value>pos</value>
														</index>
													</value>
													<value>value</value>
												</assign>
												<return depth="5" id="64"/>
											</code>
										</else-if>
										<else depth="4" id="65">
											<code>
												<comment>\SCollision</comment>
												<assign-add depth="5" id="66">
													<value>collisions</value>
													<value>1</value>
												</assign-add>
												<comment>\SWe\Savoid\Shigh\Sload\Sfactors</comment>
												<if-block depth="5" id="67">
													<if>
														<condition>
															<less>
																<value>collisions</value>
																<value>
																	<divide>
																		<value>
																			<access>
																				<value>my</value>
																				<value>size</value>
																			</access>
																		</value>
																		<value>2</value>
																	</divide>
																</value>
															</less>
														</condition>
														<code>
															<assign depth="6" id="68">
																<value>pos</value>
																<value>
																	<bitwise-and>
																		<value>
																			<add>
																				<value>pos</value>
																				<value>DEFAULT_STEP_SIZE</value>
																			</add>
																		</value>
																		<value>
																			<access>
																				<value>my</value>
																				<value>mask</value>
																			</access>
																		</value>
																	</bitwise-and>
																</value>
															</assign>
														</code>
													</if>
													<else depth="5" id="69">
														<code>
															<comment>\SIF\Swe\Sever\Shave\Sa\Sreason\Sto\Sresize\Sthe\Stable</comment>
															<comment>\Swe\Scan\Sassume\Sthat\Sthere\Swill\Sbe\SMUCH\SMORE\Sdata\Sincoming.</comment>
															<call depth="6" id="70">
																<function>
																	<access>
																		<value>my</value>
																		<value>reserve</value>
																	</access>
																</function>
																<parameters>
																	<parameter>
																		<multiply>
																			<value>
																				<access>
																					<value>my</value>
																					<value>size</value>
																				</access>
																			</value>
																			<value>8</value>
																		</multiply>
																	</parameter>
																</parameters>
															</call>
															<assign depth="6" id="71">
																<value>pos</value>
																<value>
																	<bitwise-and>
																		<value>hash</value>
																		<value>
																			<access>
																				<value>my</value>
																				<value>mask</value>
																			</access>
																		</value>
																	</bitwise-and>
																</value>
															</assign>
															<assign depth="6" id="72">
																<value>collisions</value>
																<value>0</value>
															</assign>
														</code>
													</else>
												</if-block>
												<assign depth="5" id="73">
													<value>storedHash</value>
													<value>
														<index>
															<value>
																<access>
																	<value>my</value>
																	<value>hashes</value>
																</access>
															</value>
															<value>pos</value>
														</index>
													</value>
												</assign>
												<continue depth="5" id="74"/>
											</code>
										</else>
									</if-block>
								</code>
							</while>
						</code>
					</operator>
				</operators>
			</code>
			<meta>
				<default-class-version>true</default-class-version>
			</meta>
		</class>
	</code>
</module>
